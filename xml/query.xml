<querys>
  <group id="user">

    <query id="selectUserList">
      SELECT
        id, name, dept_code, (SELECT name FROM dept_code_tbl where code = dept_code) dept_name, phone, email, name_commute, join_company, leave_company, privilege, admin, affiliated,
        ip_pc, mac, ip_office, phone_office, approval_id, (SELECT name FROM members_tbl B WHERE B.id = A.approval_id) AS approval_name, emergency_phone, birthday, wedding_day, memo,
        position_code, (SELECT name FROM position_code_tbl where code = position_code) position_name, part_code, (SELECT name FROM part_code_tbl where code = part_code) part_name, part_code, gis_pos
      FROM members_tbl A
      ORDER BY name
    </query>

    <query id="selectUserListNowFull">
      SELECT
        id, name, dept_code, (SELECT name FROM dept_code_tbl where code = dept_code) dept_name, phone, email, name_commute, join_company, leave_company, privilege, admin, affiliated,
        ip_pc, mac, ip_office, phone_office, approval_id, (SELECT name FROM members_tbl B WHERE B.id = A.approval_id) AS approval_name, emergency_phone, birthday, wedding_day, memo,
        position_code, (SELECT name FROM position_code_tbl where code = position_code) position_name, part_code, (SELECT name FROM part_code_tbl where code = part_code) part_name, part_code, gis_pos
      FROM members_tbl A
      WHERE (leave_company is null OR leave_company = "") OR leave_company >= DATE_FORMAT(NOW(),'%Y-%m-%d')
      ORDER BY name
    </query>

    <query id="selectUserListNow">
      SELECT
        id, name, dept_code, (SELECT name FROM dept_code_tbl where code = dept_code) dept_name, email,
        phone_office, (SELECT name FROM position_code_tbl where code = position_code) position_name
      FROM members_tbl A
      WHERE leave_company is null OR leave_company = ""
      ORDER BY name
    </query>

    <query id="selectIdByUser">
      SELECT
        id, name, dept_code, (SELECT name FROM dept_code_tbl where code = dept_code) dept_name, phone, email, name_commute, join_company, leave_company, privilege, admin, affiliated,
        ip_pc, mac, ip_office, phone_office, approval_id, (SELECT name FROM members_tbl B WHERE B.id = A.approval_id) AS approval_name, emergency_phone, birthday, wedding_day, memo, password,
        position_code, (SELECT name FROM position_code_tbl where code = position_code) position_name, (SELECT name FROM part_code_tbl where code = part_code) part_name, part_code, gis_pos,
        (SELECT area FROM dept_code_tbl where code = dept_code) dept_area
      FROM members_tbl A
      WHERE A.id=?
    </query>

    <query id="selectIdByLoginUser">
      SELECT 
        id, name, dept_code, (SELECT name FROM dept_code_tbl where code = dept_code) dept_name, phone, email, name_commute, join_company, leave_company, privilege, admin, affiliated,
        ip_pc, mac, ip_office, phone_office, approval_id, (SELECT name FROM members_tbl B WHERE B.id = A.approval_id) AS approval_name, emergency_phone, birthday, wedding_day, memo, password,
        position_code, (SELECT name FROM position_code_tbl where code = position_code) position_name, (SELECT name FROM part_code_tbl where code = part_code) part_name, part_code, gis_pos,
        (SELECT area FROM dept_code_tbl where code = dept_code) dept_area
      FROM members_tbl A
      WHERE ((leave_company is null OR leave_company = "") OR A.admin = 9) AND A.id=?
    </query>

    <query id="selectManager">select approval_id, (select name from members_tbl where id = m.approval_id ) approval_name from members_tbl m where id = ?</query>
    <query id="selectUserEmail">select id, email from members_tbl</query>
    <query id="insertUser">
      insert into members_tbl(id, name, dept_code, approval_id, name_commute, join_company, leave_company, privilege, admin, affiliated, position_code, ip_pc, mac, ip_office, email, phone, phone_office, emergency_phone, birthday, wedding_day, memo, part_code) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
    </query>
    <query id="initPassword">update members_tbl set password=? where id=?</query>
    <query id="updateUser">
      UPDATE
        members_tbl
      SET
        password=?,
        name=?,
        dept_code=?,
        approval_id=?,
        name_commute=?,
        join_company=?,
        leave_company=?,
        privilege=?,
        admin=?,
        affiliated=?,
        position_code=?,
        ip_pc=?,
        mac=?,
        ip_office=?,
        email=?,
        phone=?,
        phone_office=?,
        emergency_phone=?,
        birthday=?,
        wedding_day=?,
        memo=?,
        part_code=?
      WHERE id=?
    </query>

    <query id="updateUserDept">
      UPDATE
        members_tbl
      SET
        dept_code=?
      WHERE dept_code=?
    </query>

    <query id="updateUserPart">
      UPDATE
        members_tbl
      SET
        part_code=?
      WHERE part_code=?
    </query>

    <query id="updateUserGisPos">
      UPDATE
        members_tbl
      SET
        gis_pos=?
      WHERE id=?
    </query>

    <query id="deleteUser">delete from members_tbl where id=?</query>
    <query id="selectUserByIp">
      SELECT
        *
      FROM
        members_tbl
      WHERE id = ?
        AND (ip_office = ? OR ip_pc = ? )
    </query>

  </group>

    <group id="rawData">
        <query id="insertRawData">
          insert into commute_base_tbl
            (id, name, department, char_date, year, type)
          values
            (?,?,?,?,?,?)
          ON DUPLICATE KEY UPDATE
            char_date=?,
            type=?

        </query>
        <query id="insertRawDataCompanyAccess">
        INSERT INTO commute_base_tbl
          (year, id, name, department, char_date, type, ip_pc, ip_office, need_confirm, mac, members_ip_pc, members_ip_office, platform_type)
        VALUES
          (year(?), ? , ?, ?, ?, ?, ?, ?, ?, ?, (select ip_pc from members_tbl where id=?), (select ip_office from members_tbl where id=?), ?)
        </query>

        <query id="selectRawDataList">
          select
            str_to_date(char_date, "%Y-%m-%d %h:%i") date, commute_base_tbl.*
          from
            commute_base_tbl
          where
            str_to_date(char_date, "%Y-%m-%d %H:%i:%S") between str_to_date(?,"%Y-%m-%d") and adddate(str_to_date(?,"%Y-%m-%d"), 1) AND department = ? AND id like ?
        </query>
        <query id="selectRawDataListAll">
          select
            str_to_date(char_date, "%Y-%m-%d %h:%i") date, commute_base_tbl.*
          from
            commute_base_tbl
          where
            str_to_date(char_date, "%Y-%m-%d %H:%i:%S") between str_to_date(?,"%Y-%m-%d") and adddate(str_to_date(?,"%Y-%m-%d"), 1)
        </query>
        <query id="selectRawDataListV2">
          select
            str_to_date(char_date, "%Y-%m-%d %h:%i") date, commute_base_tbl.*
          from
            commute_base_tbl
          where
            str_to_date(char_date, "%Y-%m-%d %H:%i:%S") &gt; str_to_date(?,"%Y-%m-%d");
        </query>
    </group>

    <group id="holiday">
        <query id="selectHolidayList">select * from holiday_tbl where year=?</query>
        <query id="selectHolidayListByPeriod">select * from holiday_tbl where date &gt;= ? and date &lt;= ?</query>
        <query id="insertHoliday">
          INSERT INTO holiday_tbl
            (year, date, memo)
          VALUES
            (?, ?, ?)
          ON DUPLICATE KEY UPDATE
            memo = CONCAT( memo, ',', ?)
        </query>
        <query id="deleteHoliday">delete from holiday_tbl where date=?</query>
  </group>

    <group id="vacation">
        <query id="selectVacationsByYear">
      SELECT
        m.id,
          m.name,
          (SELECT name FROM dept_code_tbl where code = m.dept_code) AS dept_name,
          m.join_company,
        t2.year,
        t2.id,
        t2.total_day,
        t2.used_holiday,
          (t2.total_day - t2.used_holiday) AS holiday,
          IFNULL(t2.memo, '') AS memo,
        m.leave_company
      FROM
        members_tbl m
          INNER JOIN (
              SELECT
                v.year,
                v.id,
                v.total_day,
                IFNULL(s.used_holiday, 0) AS used_holiday,
                v.memo
              FROM
                vacation_tbl v
                LEFT JOIN (
                      SELECT year, id, sum(day_count)  used_holiday
                      FROM out_office_tbl
                      GROUP BY year, id
                      ) s
                ON v.id = s.id and v.year = s.year
              WHERE v.year = ?
          ) t2
          ON m.id = t2.id
      WHERE
        m.id like ?
      ORDER BY
        m.name
        </query>
        <query id="selectVacatonCount">
      SELECT count(*) count FROM vacation_tbl WHERE year = ?
        </query>
        <query id="selectVacationsById">
      SELECT
        total_day,
        IFNULL((SELECT sum(day_count) used_holiday FROM out_office_tbl o WHERE year = v.year AND id=v.id), 0) used_holiday,
        IFNULL((SELECT sum(day_count) approval_count FROM approval_tbl a WHERE year(start_date) = v.year AND submit_id=v.id AND state="상신" AND office_code in ("V01", "V02", "V03")), 0) approval_count
      FROM
        vacation_tbl v
      WHERE
        year = ?
        AND id=?
        </query>

        <query id="insertVacation">
      INSERT INTO vacation_tbl(id, year, total_day)
      SELECT ?, ?, ? from dual
      WHERE NOT EXISTS (
          SELECT id
          FROM vacation_tbl
          WHERE
            id = ?
              AND
                year = ?
      )
        </query>

        <query id="updateVacation">
          UPDATE
            vacation_tbl
          SET
            total_day = ?,
            memo = ?
          WHERE
            id = ? AND year = ?
        </query>

    <query id="selectSimpleVacation">
      SELECT
        v.year,
        v.id,
        v.total_day,
        IFNULL(s.used_holiday, 0) AS used_holiday
      FROM
        vacation_tbl v
        LEFT JOIN (
              SELECT year, id, sum(day_count)  used_holiday
              FROM out_office_tbl
              WHERE date between ? AND ?
              GROUP BY year, id
              ) s
        ON v.id = s.id and v.year = s.year
      WHERE v.year = ?
    </query>

    </group>

    <group id="approval">
    <query id="selectApprovalByDocNum">
        select * from approval_tbl where doc_num=?
      </query>
      <query id="rejectApprovalConfirm">
        update approval_tbl set
          decide_comment = ?
          ,state = "결재완료"
      where doc_num=?
      </query>
        <query id="selectApprovalList">
          select
            app.doc_num
            , app.submit_id, (SELECT mem.name FROM members_tbl mem WHERE mem.id = app.submit_id) submit_name
            , app.manager_id , (SELECT mem.name FROM members_tbl mem WHERE mem.id = app.manager_id) manager_name
            , submit_date , decide_date , submit_comment , decide_comment , start_date , end_date , office_code
            , (SELECT office.name FROM office_code_tbl office WHERE office.code = app.office_code) office_code_name
            , state, start_time, end_time, black_mark, day_count
        , IFNULL((SELECT total_day FROM vacation_tbl WHERE year = YEAR(app.start_date) AND id=app.submit_id), 0)  total_day
        , IFNULL((SELECT sum(day_count) used_holiday FROM out_office_tbl WHERE year = YEAR(app.start_date) AND id=app.submit_id), 0) used_holiday
        from
          approval_tbl app
      where
        doc_num = ?
        AND state != '상신취소'
    </query>
        <query id="selectApprovalListWhere">
          select
        app.doc_num, app.submit_id
        , (SELECT mem.name FROM members_tbl mem WHERE mem.id = app.submit_id) submit_name
        , (SELECT mem.dept_code FROM members_tbl mem WHERE mem.id = app.submit_id) submit_dept_code
        , app.manager_id
        , (SELECT mem.name FROM members_tbl mem WHERE mem.id = app.manager_id) manager_name
        , submit_date , decide_date , submit_comment , decide_comment , start_date , end_date , office_code
        , (SELECT office.name FROM office_code_tbl office WHERE office.code = app.office_code) office_code_name
        , state, start_time, end_time, black_mark , day_count
      from  approval_tbl app
      where ((DATE(start_date) between DATE(?) AND DATE(?))
        OR (DATE(end_date)  between DATE(?) AND DATE(?)))
        AND state != '상신취소'
        AND app.submit_id like ?
      ORDER BY doc_num desc
      </query>
      <query id="selectApprovalListById">
        select
        submit_id, office_code, start_date, end_date, submit_comment, day_count
      from
        approval_tbl
      where
        submit_id = ?
        AND YEAR(STR_TO_DATE(start_date, '%Y-%m-%d')) = ?
          AND state = "결재완료"
          AND office_code like "v%"
      </query>
      <query id="selectApprovalByManager">
          select
        app.doc_num, app.submit_id
        , (SELECT mem.name FROM members_tbl mem WHERE mem.id = app.submit_id) submit_name
        , app.manager_id
        , (SELECT mem.name FROM members_tbl mem WHERE mem.id = app.manager_id) manager_name
        , submit_date , decide_date , submit_comment , decide_comment , start_date , end_date , office_code
        , (SELECT office.name FROM office_code_tbl office WHERE office.code = app.office_code) office_code_name
        , state, start_time, end_time, black_mark , day_count
        , IFNULL((SELECT total_day FROM vacation_tbl WHERE year = YEAR(app.start_date) AND id=app.submit_id), 0)  total_day
        , IFNULL((SELECT sum(day_count) used_holiday FROM out_office_tbl WHERE year = YEAR(app.start_date) AND id=app.submit_id), 0) used_holiday
      from  approval_tbl app
      where app.manager_id = ? and (state = '상신' or state = '취소요청')
        and ((DATE(start_date) between DATE(?) AND DATE(?)) OR (DATE(end_date)  between DATE(?) AND DATE(?)))
        AND state != '상신취소'
      ORDER BY doc_num desc
      </query>
      <query id="insertApproval">
        insert into approval_tbl
        (doc_num, submit_id, manager_id, submit_date, submit_comment, start_date, end_date, office_code, state, black_mark, start_time, end_time, day_count)
      values(?, ?, ?, NOW(), ?, ?, ?, ?, ?, ?, ?, ?, ?)
      </query>
      <query id="updateApprovalState">
        update approval_tbl set 
          state = ? 
      where submit_id=? 
        and start_date=? and end_date=? 
        and state='상신대기'
        and office_code='O01'
      </query>
      <query id="updateApprovalConfirm">
        update approval_tbl set
          decide_date = NOW()
          ,decide_comment = ?
          ,state = ?
      where doc_num=?
      </query>
      <query id="updateApprovalConfirm2">
        update approval_tbl set
          decide_date = NOW()
          ,decide_comment = ?
          ,state = ?
          ,black_mark = ?
      where doc_num=?
      </query>
      <query id="deleteApproval">
        delete from approval_tbl where doc_num = ?
      </query>

      <query id="getApprovalMailData">
        SELECT
        a.doc_num,
        a.manager_id,
        a.submit_id,
        m.name as name,
        a.start_date,
        a.end_date,
        a.state,
        a.office_code,
        o.name as code_name,
        m.dept_code as dept_code,
        d.name as dept_name,
        a.submit_comment,
        d.area as dept_area
      FROM
        approval_tbl a
        left join members_tbl m on a.submit_id = m.id
        left join office_code_tbl o on a.office_code = o.code
        left join dept_code_tbl d on m.dept_code = d.code
      WHERE
        doc_num = ?
      </query>

      <query id="getApprovalMailingList">
        SELECT
        id,
        name,
        email,
        leave_company
      FROM
        members_tbl
      WHERE
        dept_code = ?
        AND 
        leave_company = ""
      </query>

      <query id="getManagerId">
        SELECT
        name,
        email
      FROM
        members_tbl
      WHERE
        id = ?
      </query>
  </group>

  <group id="approval_index">
    <query id="selectMaxIndexApproval">
      select MAX(seq) as maxSeq from approval_index_tbl where yearmonth=?
    </query>
    <query id="insertApprovalIndex">
      insert into approval_index_tbl (yearmonth, seq) values (?, 1)
    </query>
    <query id="updateMaxIndex">
      update approval_index_tbl set seq = ?+1 where yearmonth=?
    </query>
  </group>

  <group id="office_code">
    <query id="selectOfficeCodeList">select * from office_code_tbl</query>
        <query id="empty"></query>
  </group>

  <group id="dept_code">
    <query id="selectDepartmentCodeList">select * from dept_code_tbl where `use`="1"</query>
        <query id="empty"></query>
  </group>

  <group id="part_code">
    <query id="selectPartCodeList">select * from part_code_tbl</query>
        <query id="empty"></query>
  </group>

    <group id="commute">
        <query id="selectCommuteMe">
            SELECT
        (@idx:=@idx+1) AS idx,
            t1.*
            from (
          SELECT DISTINCT
              c.year,
              c.date,
              c.id,
              c.department,
              c.name,
              c.work_type,
              w.name AS work_type_name,
              c.late_time,
              c.over_time,
              IFNULL( date_format(c.in_time, '%Y-%m-%d %H:%i'), NULL) AS in_time,
              c.in_time_type,
              IFNULL( date_format(c.out_time, '%Y-%m-%d %H:%i'), NULL) AS out_time,
              c.out_time_type,
              c.in_time_change,
              c.out_time_change,
              c.overtime_code_change,
              c.comment_count,
              c.overtime_code,
              c.vacation_code,
              c.out_office_code,
              c.early_time,
              c.not_pay_over_time,
              c.normal,
              c.normal_change,
              c.except,
              c.standard_in_time,
              c.standard_out_time,
              IFNULL( o.name, '') AS overtime_type,
              IFNULL( o.overtime_pay, 0) AS overtime_pay,
              IFNULL( (select name from office_code_tbl where code = c.vacation_code), '') AS vacation_name,
              IFNULL( (select name from office_code_tbl where code = c.out_office_code), '') AS out_office_name,
              a.state AS work_night_falg,
              c.is_suwon
            FROM
              commute_result_tbl c
              left join overtime_code_tbl o on c.overtime_code = o.code
              left join work_type_code_tbl w on w.code = c.work_type
              left join approval_tbl a on a.submit_id = c.id AND a.start_date = c.date AND a.office_code = 'O01' AND a.state = '상신'
            WHERE
              (date BETWEEN ? AND ?) AND c.id like ?
            ORDER BY date
            ) t1,
            (SELECT @idx:= 0) AS idx
        </query>
        <query id="selectCommute">
            SELECT
        (@idx:=@idx+1) AS idx,
            t1.*
            from (
          SELECT DISTINCT
              c.year,
              c.date,
              c.id,
              c.department,
              c.name,
              c.work_type,
              w.name AS work_type_name,
              c.late_time,
              c.over_time,
              IFNULL( date_format(c.in_time, '%Y-%m-%d %H:%i'), NULL) AS in_time,
              c.in_time_type,
              IFNULL( date_format(c.out_time, '%Y-%m-%d %H:%i'), NULL) AS out_time,
              c.out_time_type,
              c.in_time_change,
              c.out_time_change,
              c.overtime_code_change,
              c.comment_count,
              c.overtime_code,
              c.vacation_code,
              c.out_office_code,
              c.early_time,
              c.not_pay_over_time,
              c.normal,
              c.normal_change,
              c.except,
              c.standard_in_time,
              c.standard_out_time,
              IFNULL( o.name, '') AS overtime_type,
              IFNULL( o.overtime_pay, 0) AS overtime_pay,
              IFNULL( (select name from office_code_tbl where code = c.vacation_code), '') AS vacation_name,
              IFNULL( (select name from office_code_tbl where code = c.out_office_code), '') AS out_office_name,
              a.state AS work_night_falg,
              c.is_suwon
            FROM
              commute_result_tbl c
              left join overtime_code_tbl o on c.overtime_code = o.code
              left join work_type_code_tbl w on w.code = c.work_type
              left join approval_tbl a on a.submit_id = c.id AND a.start_date = c.date AND a.office_code = 'O01' AND a.state = '상신'
            WHERE
              (date BETWEEN ? AND ?) AND department =? AND c.id like ?
            ORDER BY date
            ) t1,
            (SELECT @idx:= 0) AS idx
        </query>
    <query id="selectCommuteAll">
            SELECT
        (@idx:=@idx+1) AS idx,
            t1.*
            from (
          SELECT DISTINCT
              c.year,
              c.date,
              c.id,
              c.department,
              c.name,
              c.work_type,
              w.name AS work_type_name,
              c.late_time,
              c.over_time,
              IFNULL( date_format(c.in_time, '%Y-%m-%d %H:%i'), NULL) AS in_time,
              c.in_time_type,
              IFNULL( date_format(c.out_time, '%Y-%m-%d %H:%i'), NULL) AS out_time,
              c.out_time_type,
              c.in_time_change,
              c.out_time_change,
              c.normal,
              c.normal_change,
              c.overtime_code_change,
              c.comment_count,
              c.overtime_code,
              c.vacation_code,
              c.out_office_code,
              c.early_time,
              c.not_pay_over_time,
              c.except,
              IFNULL( o.name, '') AS overtime_type,
              IFNULL( o.overtime_pay, 0) AS overtime_pay,
              IFNULL( (select name from office_code_tbl where code = c.vacation_code), '') AS vacation_name,
              IFNULL( (select name from office_code_tbl where code = c.out_office_code), '') AS out_office_name,
              a.state AS work_night_falg,
              c.is_suwon
            FROM
              commute_result_tbl c
              left join overtime_code_tbl o on c.overtime_code = o.code
              left join work_type_code_tbl w on w.code = c.work_type
              left join approval_tbl a on a.submit_id = c.id AND a.start_date = c.date AND a.office_code = 'O01' AND a.state = '상신'
            WHERE
              date BETWEEN ? AND ?
            ORDER BY date
            ) t1,
            (SELECT @idx:= 0) AS idx
        </query>
        <query id="updateCommuteResultInOutTime">
          UPDATE
            commute_result_tbl
          SET
            in_time = ?,
            in_time_change = ?,
            out_time = ?,
            out_time_change = ?,
            normal = ?,
        normal_change = ?
          WHERE
            id = ? AND date = ?
        </query>

        <query id="insertCommuteResult">
          INSERT INTO commute_result_tbl
            (date, department, id, in_time, late_time, name, out_office_code,
            out_time, over_time, overtime_code, vacation_code, standard_in_time,
            standard_out_time, work_type, year,
            in_time_type, out_time_type, out_office_start_time, out_office_end_time,
            in_time_change, out_time_change, early_time, not_pay_over_time, normal,normal_change,except, is_suwon)
          VALUES
            (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
        </query>

        <query id="updateCommuteResult">
          UPDATE
            commute_result_tbl
          SET
            in_time = ?,
            late_time = ?,
            out_office_code = ?,
            out_time = ?,
            over_time = ?,
            overtime_code = ?,
            vacation_code = ?,
            standard_in_time = ?,
            standard_out_time = ?,
            work_type = ?,
            in_time_type = ?,
            out_time_type = ?,
            out_office_start_time = ?,
            out_office_end_time = ?,
            in_time_change = ?,
            out_time_change =?,
            overtime_code_change =?,
            early_time =?,
            not_pay_over_time=?,
            normal=?,
            normal_change=?,
            except=?
          WHERE
            id = ? AND date = ?
        </query>
        <query id="selectCommuteDate">
          SELECT
            year,
            date,
            id,
            name,
            department,
            date_format(in_time, '%Y-%m-%d %H:%i') AS in_time,
            date_format(out_time, '%Y-%m-%d %H:%i') AS out_time,
            date_format(standard_in_time, '%Y-%m-%d %H:%i') AS standard_in_time,
            date_format(standard_out_time, '%Y-%m-%d %H:%i') AS standard_out_time,
            late_time,
            over_time,
            work_type,
            out_office_code,
            overtime_code,
            vacation_code,
            in_time_type,
            out_time_type,
            out_office_end_time,
            out_office_start_time,
            in_time_change,
            out_time_change,
            overtime_code_change,
            early_time,
            not_pay_over_time,
            normal,
            normal_change,
            except
          FROM
            commute_result_tbl
          WHERE
            date = ?
        </query>
    <query id="selectCommuteByID">
          SELECT
            year,
            date,
            id,
            name,
            department,
            date_format(in_time, '%Y-%m-%d %H:%i') AS in_time,
            date_format(out_time, '%Y-%m-%d %H:%i') AS out_time,
            date_format(standard_in_time, '%Y-%m-%d %H:%i') AS standard_in_time,
            date_format(standard_out_time, '%Y-%m-%d %H:%i') AS standard_out_time,
            late_time,
            over_time,
            work_type,
            out_office_code,
            overtime_code,
            vacation_code,
            in_time_type,
            out_time_type,
            out_office_end_time,
            out_office_start_time,
            in_time_change,
            out_time_change,
            overtime_code_change,
            early_time,
            not_pay_over_time,
            normal,
            normal_change,
            except,
            is_suwon
          FROM
            commute_result_tbl
          WHERE
            (date between ? and ?) AND id = ?
          ORDER BY date
        </query>
        <query id="updateCommuteCommentCount">
          UPDATE
            commute_result_tbl
          SET
            comment_count = ( SELECT COUNT(*) + 1 FROM comment_tbl WHERE id = ? AND year = ? AND date = ?)
          WHERE
            id = ? AND year = ? AND date = ?
        </query>
        <query id="getLastiestDate">
          select
            date
          from
            commute_result_tbl
          order by
            date desc
          limit 1
        </query>

        <query id="selectCommuteToday">
      SELECT
        apt.submit_id, ? as date, mem.name as name, dept.name as dept_name, oct.name as out_office_name, start_time, end_time, submit_comment as memo, apt.state as approval_ok
      FROM
        approval_tbl apt, members_tbl mem, dept_code_tbl dept, office_code_tbl oct
      WHERE
        apt.office_code != "O01" AND
        apt.start_date &lt;= ? AND
        apt.end_date &gt;= ? AND
        apt.submit_id = mem.id AND
        mem.dept_code = dept.code AND
        apt.office_code = oct.code AND
        (
          apt.state = "결재완료" OR
          apt.state = "취소요청" OR
          apt.state = "상신"
        ) AND
        mem.dept_code like ?
        </query>
      <query id="getCommuteMailData">
          SELECT
            ? as in_time,
            mem.name,
            mem.email,
            mem.leave_company,
            mem.dept_code,
            dept.area as dept_area,
            work.name as work_type,
            dept.leader as leader_id,
            (SELECT name  FROM members_tbl WHERE id = leader_id) as leader_name,
            (SELECT email FROM members_tbl WHERE id = leader_id) as leader_email 
          FROM
            work_type_code_tbl work,
            members_tbl mem 
             left join dept_code_tbl dept on mem.dept_code = dept.code
          WHERE
            mem.id = ? 
          AND 
            work.code = ?
      </query>
    </group>
    <group id="changeHistory">
      <query id="selectChangeHistory">
      SELECT
          c.seq,
          c.year,
              c.id,
              c.change_memo,
              m.name,
              c.date,
              c.change_column,
              c.change_before,
              c.change_after,
              date_format(c.change_date, '%Y-%m-%d %H:%i') AS change_date,
              c.change_id,
              (SELECT name FROM members_tbl WHERE id = c.change_id) AS change_name
      FROM
        change_history_tbl c
                inner join members_tbl m
                on c.id = m.id
      WHERE
        c.id = ?
          AND c.date = ?
          AND c.change_column = ?
      ORDER BY c.seq
      </query>

        <query id="selectInOutChangeCount">
      select (
                  select count(*)
                  from change_history_tbl
                  where
              year = ?
                      and id = ?
                      and date = ?
                      and change_column = 'in_time'
          ) as in_time_change_count,
              (
                  select count(*)
                  from change_history_tbl
                  where
              year = ?
                      and id = ?
                      and date = ?
                      and change_column = 'out_time'
          ) as out_time_change_count
      from dual;
        </query>

      <query id="inserChangeHistory">
      INSERT INTO change_history_tbl
      (
        year, id, date,  change_column, change_before, change_after, change_date, change_id, change_memo
      )
      values
      (
        ?, ?, ?, ?, ?, ?, now(), ?, ?
      );
      </query>
    </group>

    <group id="comment">
      <query id="selectComment">
        SELECT
          c.year,
          c.date,
          c.id,
          m.name,
          c.seq,
          IFNULL( c.comment, '') AS comment,
          date_format(c.comment_date, '%Y-%m-%d %H:%i') AS comment_date,
          IFNULL( c.comment_reply, '') AS comment_reply,
          date_format(c.comment_reply_date, '%Y-%m-%d %H:%i') AS comment_reply_date,
          c.state,
          c.writer_id,
          c.want_in_time,
          c.want_out_time,
          c.want_normal,
          c.before_in_time,
          c.before_out_time,
          c.approval_id,
          c.approval_name,
          IFNULL(  (SELECT name FROM members_tbl WHERE id = c.writer_id) , '') AS writer_name,
          c.reply_id,
          IFNULL(  (SELECT name FROM members_tbl WHERE id = c.reply_id), '') AS reply_name
        FROM
          comment_tbl c
          LEFT JOIN members_tbl m ON m.id = c.id
        WHERE
          date BETWEEN ? AND ? AND c.id like ?
      ORDER BY date
      </query>

    <query id="selectCommentCountToManager">
        SELECT
          count(*) as CommentCount
        FROM
          comment_tbl
        WHERE
          state = "상신" AND
        approval_id = ?
      </query>

      <query id="selectCommentById">
        SELECT
          c.year,
          c.date,
          c.id,
          m.name,
          c.seq,
          IFNULL( c.comment, '') AS comment,
          date_format(c.comment_date, '%Y-%m-%d %H:%i') AS comment_date,
          IFNULL( c.comment_reply, '') AS comment_reply,
          date_format(c.comment_reply_date, '%Y-%m-%d %H:%i') AS comment_reply_date,
          c.state,
          c.writer_id,
          c.want_in_time,
          c.want_out_time,
          c.before_in_time,
          c.before_out_time,
          c.want_normal,
          c.approval_id,
          c.approval_name,
          IFNULL(  (SELECT name FROM members_tbl WHERE id = c.writer_id) , '') AS writer_name,
          c.reply_id,
          IFNULL(  (SELECT name FROM members_tbl WHERE id = c.reply_id), '') AS reply_name
        FROM
          comment_tbl c
          LEFT JOIN members_tbl m ON m.id = c.id
        WHERE
          c.approval_id = ? AND state = '상신'
      ORDER BY date
      </query>

      <query id="selectCommentByPk">
        SELECT
          c.year,
          c.date,
          c.id,
          m.name,
          c.seq,
          IFNULL( c.comment, '') AS comment,
          date_format(c.comment_date, '%Y-%m-%d %H:%i') AS comment_date,
          IFNULL( c.comment_reply, '') AS comment_reply,
          date_format(c.comment_reply_date, '%Y-%m-%d %H:%i') AS comment_reply_date,
          c.state,
          c.writer_id,
          c.want_in_time,
          c.want_out_time,
          c.before_in_time,
          c.before_out_time,
          c.want_normal,
          c.approval_id,
          c.approval_name,
          IFNULL(  (SELECT name FROM members_tbl WHERE id = c.writer_id) , '') AS writer_name,
          c.reply_id,
          IFNULL(  (SELECT name FROM members_tbl WHERE id = c.reply_id), '') AS reply_name
        FROM
          comment_tbl c
          LEFT JOIN members_tbl m ON m.id = c.id
        WHERE
          c.id = ? and c.date = ? and c.seq = ?
      ORDER BY date
      </query>

      <query id="insertComment">
        INSERT INTO comment_tbl
        (
          year, id, date, comment, comment_date, state, writer_id, want_in_time, want_out_time, before_in_time, before_out_time, want_normal, approval_id, approval_name
        )
        values
        (
          ?, ?, ?, ?, now(), ?, ?, ?, ?, ?, ?, ?, ?, ?
        )
      </query>

      <query id="updateCommentReply">
      UPDATE
        comment_tbl
      SET
        comment_reply = ?,
          comment_reply_date = now(),
          state = ?,
          reply_id = ?
      WHERE
        id = ? AND year = ? AND date = ? AND seq = ?
      </query>

      <query id="selectCommentExist">
      SELECT count(*) as count
      FROM
        comment_tbl
      WHERE
        id = ? AND year = ? AND date = ? AND (state = '상신' OR state = '결재')
      </query>

    </group>

    <group id="outOffice">
      <query id="selectOutOfficeList">
        select * from out_office_tbl where date &gt;= ? and date &lt;= ? and id like ?
      </query>
      <query id="insertOutOffice">
      insert into out_office_tbl(year, date, id, office_code, day_count, memo, doc_num, black_mark, start_time, end_time)
        values(
          ? ,? , ?, ?
          ,(select day_count from office_code_tbl where code = ?)
          ,? ,? ,?, ?, ?
        )
      </query>
      <query id="deleteOutOfficeList">
        delete from out_office_tbl where doc_num = ?;
      </query>
    </group>
    <group id="inOffice">
      <query id="selectInOfficeList">
        select * from in_office_tbl where date &gt;= ? and date &lt;= ? and id like ?
      </query>
      <query id="insertInOffice">
      insert into in_office_tbl(year, date, id, doc_num) values(? ,? , ?, ?)
      </query>
      <query id="deleteInOfficeList">
        delete from in_office_tbl where doc_num = ?;
      </query>
    </group>

    <group id="code">
      <query id="getDepartmentCode">
        select
          *
        from
          dept_code_tbl
      </query>
      <query id="getOfficeCode">
        select
          *
        from
          office_code_tbl
      </query>
      <query id="getOvertimeCode">
        select
          *
        from
          overtime_code_tbl
      </query>
      <query id="getWorktypeCode">
        select
          *
        from
          work_type_code_tbl
      </query>

        <query id="selectDeptList">SELECT code, name, area FROM dept_code_tbl where `use`="1"</query>
        <query id="selectPartList">SELECT code, name FROM part_code_tbl WHERE `use`="1"</query>
        <query id="selectApprovalUserList">SELECT id as code, name  FROM members_tbl WHERE privilege=1</query>
        <query id="selectPositionList">SELECT code, name FROM position_code_tbl</query>
        <query id="selectUserList">SELECT id as code, name, dept_code  FROM members_tbl where leave_company is null or leave_company = '' order by name</query>
        <query id="getOfficeItemCode">SELECT category_code as code, category_name as name, category_type as type  FROM office_item_category_tbl order by category_code asc</query>
    </group>
    <group id ="dashboard">
      <query id="getWorktypeCode">
        select
          *
        from
          work_type_code_tbl
      </query>
      <query id="selectWorkingSummaryById">
        SELECT
        id,
        A.name ,
        COUNT(0) AS 'total_working_day',
        SUM(CASE WHEN (work_type=10 || work_type=11) THEN 1 ELSE 0 END) AS 'perception',
        SUM(CASE WHEN (work_type=01 || work_type=11) THEN 1 ELSE 0 END) AS 'sick_leave',
        SUM(CASE WHEN (work_type=21 || work_type=22) THEN 1 ELSE 0 END) AS 'absenteeism',
        IFNULL(SUM(B.day_count), 0) AS 'vacation',
        SUM(CASE WHEN (overtime_code='2015_AA') THEN 1 ELSE 0 END) AS 'night_working_a',
        SUM(CASE WHEN (overtime_code='2015_AB') THEN 1 ELSE 0 END) AS 'night_working_b',
        SUM(CASE WHEN (overtime_code='2015_AC') THEN 1 ELSE 0 END) AS 'night_working_c',
        SUM(CASE WHEN (overtime_code='2015_BA') THEN 1 ELSE 0 END) AS 'holiday_working_a',
        SUM(CASE WHEN (overtime_code='2015_BB') THEN 1 ELSE 0 END) AS 'holiday_working_b',
        SUM(CASE WHEN (overtime_code='2015_BC') THEN 1 ELSE 0 END) AS 'holiday_working_c',
        SUM(CASE WHEN (work_type=40 || work_type=41) THEN 0 ELSE over_time END) AS 'total_over_time',
        SUM(CASE WHEN (work_type=40 || work_type=41) THEN over_time ELSE 0 END) AS 'total_holiday_over_time',
        SUM(CASE WHEN (work_type=40 || work_type=41) THEN 0 ELSE not_pay_over_time END) AS 'over_over_time',
        SUM(CASE WHEN (work_type=40 || work_type=41) THEN not_pay_over_time ELSE 0 END) AS 'over_holiday_over_time',
        SUM(early_time) AS 'total_early_time'
      FROM commute_result_tbl A
      LEFT OUTER JOIN office_code_tbl B ON A.vacation_code = B.code
      LEFT OUTER JOIN overtime_code_tbl C ON A.overtime_code=C.code
      INNER JOIN (
        SELECT
          STR_TO_DATE(?, '%Y-%m-%d') AS START_DATE,
          STR_TO_DATE(?, '%Y-%m-%d') AS END_DATE
        FROM DUAL
      ) D ON A.date &gt;= D.START_DATE AND A.date &lt;= D.END_DATE
      WHERE A.year = ? AND A.id = ?
      GROUP BY ID
      </query>
    <query id="selectCommuteSummaryById">
      SELECT
        c.id, c.name, c.date, c.work_type, c.vacation_code, c.out_office_code, c.overtime_code, c.over_time, a.state AS work_night_falg
      FROM
        commute_result_tbl c
        left join approval_tbl a on a.submit_id = c.id AND a.start_date = c.date AND a.office_code = 'O01'
      WHERE
        id = ? AND ( date &gt;= ? AND date &lt;= ? )
      ORDER BY date
    </query>
    <query id="selectAttendanceById">
      SELECT
        id, name, char_date, type, need_confirm
      FROM
        commute_base_tbl
      WHERE
      id = ? AND ( char_date &gt;= ? AND char_date &lt;= ? ) AND type not like "%퇴근%"
    </query>
    </group>

    <group id ="report">

      <query id="selectReportUsers">
      SELECT
          m.id,
          m.name,
          m.leave_company,
                p.name AS position_name,
          m.dept_code,
          d.name AS dept_name,
          partTbl.name AS part_name
      FROM
        members_tbl m

        INNER JOIN dept_code_tbl d
          ON d.code = m.dept_code

        INNER JOIN position_code_tbl p
          ON p.code = m.position_code

          LEFT JOIN part_code_tbl partTbl
          ON partTbl.code = m.part_code

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name
      </query>

      <query id="selectLateWorkerReport">
      SELECT
        m.dept_code, m.name, m.id,
        IFNULL(t2.1, '') AS '1', IFNULL(t2.2, '') AS '2', IFNULL(t2.3, '') AS '3', IFNULL(t2.4, '') AS '4', IFNULL(t2.5, '') AS '5', IFNULL(t2.6, '') AS '6',
                IFNULL(t2.7, '') AS '7', IFNULL(t2.8, '') AS '8', IFNULL(t2.9, '') AS '9', IFNULL(t2.10, '') AS '10', IFNULL(t2.11, '') AS '11', IFNULL(t2.12, '') AS '12',
                IFNULL(t2.total, '') AS total
      FROM
          members_tbl m
              LEFT JOIN (
              SELECT
                id,
                SUM(CASE WHEN month = 1 THEN cnt END) AS '1',
                SUM(CASE WHEN month = 2 THEN cnt END) AS '2',
                SUM(CASE WHEN month = 3 THEN cnt END) AS '3',
                SUM(CASE WHEN month = 4 THEN cnt END) AS '4',
                SUM(CASE WHEN month = 5 THEN cnt END) AS '5',
                SUM(CASE WHEN month = 6 THEN cnt END) AS '6',
                SUM(CASE WHEN month = 7 THEN cnt END) AS '7',
                SUM(CASE WHEN month = 8 THEN cnt END) AS '8',
                SUM(CASE WHEN month = 9 THEN cnt END) AS '9',
                SUM(CASE WHEN month = 10 THEN cnt END) AS '10',
                SUM(CASE WHEN month = 11 THEN cnt END) AS '11',
                SUM(CASE WHEN month = 12 THEN cnt END) AS '12',
                                SUM(cnt) AS total
              FROM (

                  SELECT
                    id,
                    SUBSTRING(date,6,2) AS month,
                    count(id) cnt
                  FROM
                    commute_result_tbl
                  WHERE
                    year = ?
                    AND date BETWEEN ? AND ?
                    AND (work_type = '10' || work_type = '11')
                  GROUP BY id, month
              ) t1
              GROUP BY id
              ) t2
      ON m.id = t2.id

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name
      </query>

    <query id="selectUsedHolidayReport">
      SELECT
          m.dept_code, m.name, m.id,
          IFNULL(t2.1, '') AS '1', IFNULL(t2.2, '') AS '2', IFNULL(t2.3, '') AS '3', IFNULL(t2.4, '') AS '4', IFNULL(t2.5, '') AS '5', IFNULL(t2.6, '') AS '6',
          IFNULL(t2.7, '') AS '7', IFNULL(t2.8, '') AS '8', IFNULL(t2.9, '') AS '9', IFNULL(t2.10, '') AS '10', IFNULL(t2.11, '') AS '11', IFNULL(t2.12, '') AS '12',
                    IF( total_day = 0, '',  total_day ) AS total_day,
                    IF( (t2.total_day - t2.used_holiday) = 0, '' , t2.total_day - t2.used_holiday) AS holiday
      FROM
        members_tbl m
        LEFT JOIN (
            SELECT
              id,
              SUM(CASE WHEN month = 1 THEN used END) AS '1',
              SUM(CASE WHEN month = 2 THEN used END) AS '2',
              SUM(CASE WHEN month = 3 THEN used END) AS '3',
              SUM(CASE WHEN month = 4 THEN used END) AS '4',
              SUM(CASE WHEN month = 5 THEN used END) AS '5',
              SUM(CASE WHEN month = 6 THEN used END) AS '6',
              SUM(CASE WHEN month = 7 THEN used END) AS '7',
              SUM(CASE WHEN month = 8 THEN used END) AS '8',
              SUM(CASE WHEN month = 9 THEN used END) AS '9',
              SUM(CASE WHEN month = 10 THEN used END) AS '10',
              SUM(CASE WHEN month = 11 THEN used END) AS '11',
              SUM(CASE WHEN month = 12 THEN used END) AS '12',
              IFNULL( total_day, 0) AS total_day,
              IFNULL( SUM(used), 0) AS used_holiday
            FROM (
                  SELECT
                    IFNULL( SUBSTRING(o.date,6,2) , '01') AS month,
                    v.id,
                    v.total_day,
                    SUM( o.day_count ) AS used
                  FROM
                    vacation_tbl v
                    LEFT JOIN out_office_tbl o
                    ON v.id = o.id AND v.year = o.year
                    AND o.date BETWEEN ? AND ?
                    AND o.office_code IN ('V01', 'V02', 'V03')
                  WHERE
                    v.year = ?
                  GROUP BY month, v.id, v.total_day
            ) t1
            GROUP BY id, total_day
        ) t2
      ON m.id = t2.id

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name
      </query>

      <query id="selectHolidayWorkTimeReport">
      SELECT
        m.dept_code, m.name, m.id,
        if(isnull(t2.1) , '', concat(floor(t2.1/60),":",round(t2.1%60))) as '1',
        if(isnull(t2.2) , '', concat(floor(t2.2/60),":",round(t2.2%60))) as '2',
        if(isnull(t2.3) , '', concat(floor(t2.3/60),":",round(t2.3%60))) as '3',
        if(isnull(t2.4) , '', concat(floor(t2.4/60),":",round(t2.4%60))) as '4',
        if(isnull(t2.5) , '', concat(floor(t2.5/60),":",round(t2.5%60))) as '5',
        if(isnull(t2.6) , '', concat(floor(t2.6/60),":",round(t2.6%60))) as '6',
        if(isnull(t2.7) , '', concat(floor(t2.7/60),":",round(t2.7%60))) as '7',
        if(isnull(t2.8) , '', concat(floor(t2.8/60),":",round(t2.8%60))) as '8',
        if(isnull(t2.9) , '', concat(floor(t2.9/60),":",round(t2.9%60))) as '9',
        if(isnull(t2.10) , '', concat(floor(t2.10/60),":",round(t2.10%60))) as '10',
        if(isnull(t2.11) , '', concat(floor(t2.11/60),":",round(t2.11%60))) as '11',
        if(isnull(t2.12) , '', concat(floor(t2.12/60),":",round(t2.12%60))) as '12',
        if(isnull(t2.total) , '', concat(floor(t2.total/60),":",round(t2.total%60))) as 'total'
      FROM
          members_tbl m
              LEFT JOIN (
              SELECT
                id,
                SUM(CASE WHEN month = 1 THEN over_time END) AS '1',
                SUM(CASE WHEN month = 2 THEN over_time END) AS '2',
                SUM(CASE WHEN month = 3 THEN over_time END) AS '3',
                SUM(CASE WHEN month = 4 THEN over_time END) AS '4',
                SUM(CASE WHEN month = 5 THEN over_time END) AS '5',
                SUM(CASE WHEN month = 6 THEN over_time END) AS '6',
                SUM(CASE WHEN month = 7 THEN over_time END) AS '7',
                SUM(CASE WHEN month = 8 THEN over_time END) AS '8',
                SUM(CASE WHEN month = 9 THEN over_time END) AS '9',
                SUM(CASE WHEN month = 10 THEN over_time END) AS '10',
                SUM(CASE WHEN month = 11 THEN over_time END) AS '11',
                SUM(CASE WHEN month = 12 THEN over_time END) AS '12',
                              SUM(over_time) AS total
              FROM (
                  SELECT
                    id,
                    SUBSTRING(date,6,2) AS month,
                    SUM(over_time) AS over_time
                  FROM commute_result_tbl
                  WHERE
                    year = ?
                    AND date BETWEEN ? AND ?
                    AND WORK_TYPE = '41'
                  GROUP BY id, month
              ) t1
              GROUP BY id
              ) t2
      ON m.id = t2.id

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name
      </query>

      <query id="selectOverTimeWorkeReport">
      SELECT
          m.dept_code, m.name, m.id,
          if(isnull(t2.1) , '', concat(floor(t2.1/60),":",round(t2.1%60))) as '1',
          if(isnull(t2.2) , '', concat(floor(t2.2/60),":",round(t2.2%60))) as '2',
          if(isnull(t2.3) , '', concat(floor(t2.3/60),":",round(t2.3%60))) as '3',
          if(isnull(t2.4) , '', concat(floor(t2.4/60),":",round(t2.4%60))) as '4',
          if(isnull(t2.5) , '', concat(floor(t2.5/60),":",round(t2.5%60))) as '5',
          if(isnull(t2.6) , '', concat(floor(t2.6/60),":",round(t2.6%60))) as '6',
          if(isnull(t2.7) , '', concat(floor(t2.7/60),":",round(t2.7%60))) as '7',
          if(isnull(t2.8) , '', concat(floor(t2.8/60),":",round(t2.8%60))) as '8',
          if(isnull(t2.9) , '', concat(floor(t2.9/60),":",round(t2.9%60))) as '9',
          if(isnull(t2.10) , '', concat(floor(t2.10/60),":",round(t2.10%60))) as '10',
          if(isnull(t2.11) , '', concat(floor(t2.11/60),":",round(t2.11%60))) as '11',
          if(isnull(t2.12) , '', concat(floor(t2.12/60),":",round(t2.12%60))) as '12',
          if(isnull(t2.total) , '', concat(floor(t2.total/60),":",round(t2.total%60))) as 'total'
      FROM
          members_tbl m
              LEFT JOIN (
              SELECT
                id,
                SUM(CASE WHEN month = 1 THEN over_time END) AS '1',
                SUM(CASE WHEN month = 2 THEN over_time END) AS '2',
                SUM(CASE WHEN month = 3 THEN over_time END) AS '3',
                SUM(CASE WHEN month = 4 THEN over_time END) AS '4',
                SUM(CASE WHEN month = 5 THEN over_time END) AS '5',
                SUM(CASE WHEN month = 6 THEN over_time END) AS '6',
                SUM(CASE WHEN month = 7 THEN over_time END) AS '7',
                SUM(CASE WHEN month = 8 THEN over_time END) AS '8',
                SUM(CASE WHEN month = 9 THEN over_time END) AS '9',
                SUM(CASE WHEN month = 10 THEN over_time END) AS '10',
                SUM(CASE WHEN month = 11 THEN over_time END) AS '11',
                SUM(CASE WHEN month = 12 THEN over_time END) AS '12',
                                SUM(over_time) AS total
              FROM (
                  SELECT
                    id,
                    SUBSTRING(date,6,2) AS month,
                    SUM(over_time) AS over_time
                  FROM commute_result_tbl
                  WHERE
                    year = ?
                    AND date BETWEEN ? AND ?
                    AND WORK_TYPE != '30'
                    AND WORK_TYPE != '40'
                    AND WORK_TYPE != '41'
                    AND OVER_TIME != '0'
                  GROUP BY id, month
              ) t1
              GROUP BY id
              ) t2
      ON m.id = t2.id

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name
      </query>
      <query id="selectOverTimeWorkeReport25">
      SELECT
          m.dept_code, m.name, m.id,
          if(isnull(t2.1) , '', concat(floor(t2.1/60),":",round(t2.1%60))) as '1',
          if(isnull(t2.2) , '', concat(floor(t2.2/60),":",round(t2.2%60))) as '2',
          if(isnull(t2.3) , '', concat(floor(t2.3/60),":",round(t2.3%60))) as '3',
          if(isnull(t2.4) , '', concat(floor(t2.4/60),":",round(t2.4%60))) as '4',
          if(isnull(t2.5) , '', concat(floor(t2.5/60),":",round(t2.5%60))) as '5',
          if(isnull(t2.6) , '', concat(floor(t2.6/60),":",round(t2.6%60))) as '6',
          if(isnull(t2.7) , '', concat(floor(t2.7/60),":",round(t2.7%60))) as '7',
          if(isnull(t2.8) , '', concat(floor(t2.8/60),":",round(t2.8%60))) as '8',
          if(isnull(t2.9) , '', concat(floor(t2.9/60),":",round(t2.9%60))) as '9',
          if(isnull(t2.10) , '', concat(floor(t2.10/60),":",round(t2.10%60))) as '10',
          if(isnull(t2.11) , '', concat(floor(t2.11/60),":",round(t2.11%60))) as '11',
          if(isnull(t2.12) , '', concat(floor(t2.12/60),":",round(t2.12%60))) as '12',
          if(isnull(t2.total) , '', concat(floor(t2.total/60),":",round(t2.total%60))) as 'total'
      FROM
          members_tbl m
          LEFT JOIN (
              SELECT
                id,
                SUM(CASE WHEN month = 1 THEN over_time END) AS '1',
                SUM(CASE WHEN month = 2 THEN over_time END) AS '2',
                SUM(CASE WHEN month = 3 THEN over_time END) AS '3',
                SUM(CASE WHEN month = 4 THEN over_time END) AS '4',
                SUM(CASE WHEN month = 5 THEN over_time END) AS '5',
                SUM(CASE WHEN month = 6 THEN over_time END) AS '6',
                SUM(CASE WHEN month = 7 THEN over_time END) AS '7',
                SUM(CASE WHEN month = 8 THEN over_time END) AS '8',
                SUM(CASE WHEN month = 9 THEN over_time END) AS '9',
                SUM(CASE WHEN month = 10 THEN over_time END) AS '10',
                SUM(CASE WHEN month = 11 THEN over_time END) AS '11',
                SUM(CASE WHEN month = 12 THEN over_time END) AS '12',
                SUM(over_time) AS total
              FROM (
                select id, t0.month, sum(over_time) as over_time
                from (
                  select id, over_time,

                  case
                    when date between ? AND ? then "01"
                    when date between ? AND ? then "02"
                    when date between ? AND ? then "03"
                    when date between ? AND ? then "04"
                    when date between ? AND ? then "05"
                    when date between ? AND ? then "06"
                    when date between ? AND ? then "07"
                    when date between ? AND ? then "08"
                    when date between ? AND ? then "09"
                    when date between ? AND ? then "10"
                    when date between ? AND ? then "11"
                    when date between ? AND ? then "12"
                    end as month
                  from commute_result_tbl
                  where date between ? AND ?
                  AND (overtime_code in ('2015_AA', '2015_AB', '2015_AC', '') OR overtime_code is null )
                  AND work_type not in ('30', '40', '41')
                ) t0
                group by t0.id, t0.month
              ) t1
              GROUP BY id
          ) t2
      ON m.id = t2.id

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name;
      </query>

    <query id="selectPayedOverTimeWorkReport">
      SELECT
          m.dept_code, m.name, m.id,
          if(isnull(t2.1) , '', concat(floor(t2.1/60),":",round(t2.1%60))) as '1',
          if(isnull(t2.2) , '', concat(floor(t2.2/60),":",round(t2.2%60))) as '2',
          if(isnull(t2.3) , '', concat(floor(t2.3/60),":",round(t2.3%60))) as '3',
          if(isnull(t2.4) , '', concat(floor(t2.4/60),":",round(t2.4%60))) as '4',
          if(isnull(t2.5) , '', concat(floor(t2.5/60),":",round(t2.5%60))) as '5',
          if(isnull(t2.6) , '', concat(floor(t2.6/60),":",round(t2.6%60))) as '6',
          if(isnull(t2.7) , '', concat(floor(t2.7/60),":",round(t2.7%60))) as '7',
          if(isnull(t2.8) , '', concat(floor(t2.8/60),":",round(t2.8%60))) as '8',
          if(isnull(t2.9) , '', concat(floor(t2.9/60),":",round(t2.9%60))) as '9',
          if(isnull(t2.10) , '', concat(floor(t2.10/60),":",round(t2.10%60))) as '10',
          if(isnull(t2.11) , '', concat(floor(t2.11/60),":",round(t2.11%60))) as '11',
          if(isnull(t2.12) , '', concat(floor(t2.12/60),":",round(t2.12%60))) as '12',
          if(isnull(t2.total) , '', concat(floor(t2.total/60),":",round(t2.total%60))) as 'total'
      FROM
          members_tbl m
              LEFT JOIN (
              SELECT
                id,
                SUM(CASE WHEN month = 1 THEN over_time END) AS '1',
                SUM(CASE WHEN month = 2 THEN over_time END) AS '2',
                SUM(CASE WHEN month = 3 THEN over_time END) AS '3',
                SUM(CASE WHEN month = 4 THEN over_time END) AS '4',
                SUM(CASE WHEN month = 5 THEN over_time END) AS '5',
                SUM(CASE WHEN month = 6 THEN over_time END) AS '6',
                SUM(CASE WHEN month = 7 THEN over_time END) AS '7',
                SUM(CASE WHEN month = 8 THEN over_time END) AS '8',
                SUM(CASE WHEN month = 9 THEN over_time END) AS '9',
                SUM(CASE WHEN month = 10 THEN over_time END) AS '10',
                SUM(CASE WHEN month = 11 THEN over_time END) AS '11',
                SUM(CASE WHEN month = 12 THEN over_time END) AS '12',
                                SUM(over_time) AS total
              FROM (
                  SELECT
                    id,
                    SUBSTRING(date,6,2) AS month,
                    SUM(over_time) - SUM(except) AS over_time
                  FROM commute_result_tbl
                  WHERE
                    year = ?
                    AND date BETWEEN ? AND ?
                    AND overtime_code IN ('2015_AA', '2015_AB','2015_AC')
                  GROUP BY id, month
              ) t1
              GROUP BY id
              ) t2
      ON m.id = t2.id

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name
      </query>
      
      <query id="selectPayedOverTimeWorkReport25">
      SELECT
          m.dept_code, m.name, m.id,
          if(isnull(t2.1) , '', concat(floor(t2.1/60),":",round(t2.1%60))) as '1',
          if(isnull(t2.2) , '', concat(floor(t2.2/60),":",round(t2.2%60))) as '2',
          if(isnull(t2.3) , '', concat(floor(t2.3/60),":",round(t2.3%60))) as '3',
          if(isnull(t2.4) , '', concat(floor(t2.4/60),":",round(t2.4%60))) as '4',
          if(isnull(t2.5) , '', concat(floor(t2.5/60),":",round(t2.5%60))) as '5',
          if(isnull(t2.6) , '', concat(floor(t2.6/60),":",round(t2.6%60))) as '6',
          if(isnull(t2.7) , '', concat(floor(t2.7/60),":",round(t2.7%60))) as '7',
          if(isnull(t2.8) , '', concat(floor(t2.8/60),":",round(t2.8%60))) as '8',
          if(isnull(t2.9) , '', concat(floor(t2.9/60),":",round(t2.9%60))) as '9',
          if(isnull(t2.10) , '', concat(floor(t2.10/60),":",round(t2.10%60))) as '10',
          if(isnull(t2.11) , '', concat(floor(t2.11/60),":",round(t2.11%60))) as '11',
          if(isnull(t2.12) , '', concat(floor(t2.12/60),":",round(t2.12%60))) as '12',
          if(isnull(t2.total) , '', concat(floor(t2.total/60),":",round(t2.total%60))) as 'total'
      FROM
          members_tbl m
              LEFT JOIN (
              SELECT
                id,
                SUM(CASE WHEN month = 1 THEN over_time END) AS '1',
                SUM(CASE WHEN month = 2 THEN over_time END) AS '2',
                SUM(CASE WHEN month = 3 THEN over_time END) AS '3',
                SUM(CASE WHEN month = 4 THEN over_time END) AS '4',
                SUM(CASE WHEN month = 5 THEN over_time END) AS '5',
                SUM(CASE WHEN month = 6 THEN over_time END) AS '6',
                SUM(CASE WHEN month = 7 THEN over_time END) AS '7',
                SUM(CASE WHEN month = 8 THEN over_time END) AS '8',
                SUM(CASE WHEN month = 9 THEN over_time END) AS '9',
                SUM(CASE WHEN month = 10 THEN over_time END) AS '10',
                SUM(CASE WHEN month = 11 THEN over_time END) AS '11',
                SUM(CASE WHEN month = 12 THEN over_time END) AS '12',
                                SUM(over_time) AS total
              FROM (
                  SELECT
                    id,
                    case
                      when date between ? AND ? then "1"
                      when date between ? AND ? then "2"
                      when date between ? AND ? then "3"
                      when date between ? AND ? then "4"
                      when date between ? AND ? then "5"
                      when date between ? AND ? then "6"
                      when date between ? AND ? then "7"
                      when date between ? AND ? then "8"
                      when date between ? AND ? then "9"
                      when date between ? AND ? then "10"
                      when date between ? AND ? then "11"
                      when date between ? AND ? then "12"
                      end as month,
                    SUM(over_time) - SUM(except) AS over_time
                  FROM commute_result_tbl
                  WHERE
                    date BETWEEN ? AND ?
                    AND overtime_code IN ('2015_AA', '2015_AB','2015_AC')
                  GROUP BY id, month
              ) t1
              GROUP BY id
              ) t2
      ON m.id = t2.id

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name
      </query>

      <query id="selectOverTimeWorkTypeReport">
      SELECT
        m.dept_code, m.name, m.id,
        IFNULL(ta.1a, '') AS '1a', IFNULL(tb.1b, '') AS '1b', IFNULL(tc.1c, '') AS '1c',
        IFNULL(ta.2a, '') AS '2a', IFNULL(tb.2b, '') AS '2b', IFNULL(tc.2c, '') AS '2c',
        IFNULL(ta.3a, '') AS '3a', IFNULL(tb.3b, '') AS '3b', IFNULL(tc.3c, '') AS '3c',
        IFNULL(ta.4a, '') AS '4a', IFNULL(tb.4b, '') AS '4b', IFNULL(tc.4c, '') AS '4c',
        IFNULL(ta.5a, '') AS '5a', IFNULL(tb.5b, '') AS '5b', IFNULL(tc.5c, '') AS '5c',
        IFNULL(ta.6a, '') AS '6a', IFNULL(tb.6b, '') AS '6b', IFNULL(tc.6c, '') AS '6c',
        IFNULL(ta.7a, '') AS '7a', IFNULL(tb.7b, '') AS '7b', IFNULL(tc.7c, '') AS '7c',
        IFNULL(ta.8a, '') AS '8a', IFNULL(tb.8b, '') AS '8b', IFNULL(tc.8c, '') AS '8c',
        IFNULL(ta.9a, '') AS '9a', IFNULL(tb.9b, '') AS '9b', IFNULL(tc.9c, '') AS '9c',
        IFNULL(ta.10a, '') AS '10a', IFNULL(tb.10b, '') AS '10b', IFNULL(tc.10c, '') AS '10c',
        IFNULL(ta.11a, '') AS '11a', IFNULL(tb.11b, '') AS '11b', IFNULL(tc.11c, '') AS '11c',
        IFNULL(ta.12a, '') AS '12a', IFNULL(tb.12b, '') AS '12b', IFNULL(tc.12c, '') AS '12c',
        IFNULL(ta.a_total, '') AS 'a_total', IFNULL(tb.b_total, '') AS 'b_total', IFNULL(tc.c_total, '') AS 'c_total'
      FROM
        members_tbl m
        LEFT JOIN (
          SELECT
            id,
            SUM(CASE WHEN month = 1 THEN cnt END) AS '1a',
            SUM(CASE WHEN month = 2 THEN cnt END) AS '2a',
            SUM(CASE WHEN month = 3 THEN cnt END) AS '3a',
            SUM(CASE WHEN month = 4 THEN cnt END) AS '4a',
            SUM(CASE WHEN month = 5 THEN cnt END) AS '5a',
            SUM(CASE WHEN month = 6 THEN cnt END) AS '6a',
            SUM(CASE WHEN month = 7 THEN cnt END) AS '7a',
            SUM(CASE WHEN month = 8 THEN cnt END) AS '8a',
            SUM(CASE WHEN month = 9 THEN cnt END) AS '9a',
            SUM(CASE WHEN month = 10 THEN cnt END) AS '10a',
            SUM(CASE WHEN month = 11 THEN cnt END) AS '11a',
            SUM(CASE WHEN month = 12 THEN cnt END) AS '12a',
            SUM(cnt) AS a_total
          FROM (
            SELECT
            id,
            SUBSTRING(date,6,2) AS month,
            count(id) AS cnt
            FROM
              commute_result_tbl
            WHERE
              year = ?
              AND date BETWEEN ? AND ?
              AND overtime_code = '2015_AA'
            GROUP BY id, month
          ) t1
          GROUP BY id
        ) ta
            ON m.id = ta.id
        LEFT JOIN (
            SELECT
              id,
              SUM(CASE WHEN month = 1 THEN cnt END) AS '1b',
              SUM(CASE WHEN month = 2 THEN cnt END) AS '2b',
              SUM(CASE WHEN month = 3 THEN cnt END) AS '3b',
              SUM(CASE WHEN month = 4 THEN cnt END) AS '4b',
              SUM(CASE WHEN month = 5 THEN cnt END) AS '5b',
              SUM(CASE WHEN month = 6 THEN cnt END) AS '6b',
              SUM(CASE WHEN month = 7 THEN cnt END) AS '7b',
              SUM(CASE WHEN month = 8 THEN cnt END) AS '8b',
              SUM(CASE WHEN month = 9 THEN cnt END) AS '9b',
              SUM(CASE WHEN month = 10 THEN cnt END) AS '10b',
              SUM(CASE WHEN month = 11 THEN cnt END) AS '11b',
              SUM(CASE WHEN month = 12 THEN cnt END) AS '12b',
              SUM(cnt) AS b_total
            FROM (
              SELECT
                id,
                SUBSTRING(date,6,2) AS month,
                count(id) AS cnt
              FROM
                commute_result_tbl
              WHERE
                year = ?
                AND date BETWEEN ? AND ?
                AND overtime_code = '2015_AB'
              GROUP BY id, month
            ) t1
            GROUP BY id
        )tb
        ON m.id = tb.id
        LEFT JOIN (
            SELECT
              id,
              SUM(CASE WHEN month = 1 THEN cnt END) AS '1c',
              SUM(CASE WHEN month = 2 THEN cnt END) AS '2c',
              SUM(CASE WHEN month = 3 THEN cnt END) AS '3c',
              SUM(CASE WHEN month = 4 THEN cnt END) AS '4c',
              SUM(CASE WHEN month = 5 THEN cnt END) AS '5c',
              SUM(CASE WHEN month = 6 THEN cnt END) AS '6c',
              SUM(CASE WHEN month = 7 THEN cnt END) AS '7c',
              SUM(CASE WHEN month = 8 THEN cnt END) AS '8c',
              SUM(CASE WHEN month = 9 THEN cnt END) AS '9c',
              SUM(CASE WHEN month = 10 THEN cnt END) AS '10c',
              SUM(CASE WHEN month = 11 THEN cnt END) AS '11c',
              SUM(CASE WHEN month = 12 THEN cnt END) AS '12c',
              SUM(cnt) AS c_total
            FROM (
              SELECT
                id,
                SUBSTRING(date,6,2) AS month,
                COUNT(id) AS cnt
              FROM
                commute_result_tbl
              WHERE
                year = ?
                AND date BETWEEN ? AND ?
                AND overtime_code = '2015_AC'
              GROUP BY id, month
            ) t1
            GROUP BY id
        )tc
        ON m.id = tc.id

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name
      </query>

      <query id="selectOverTimeWorkTypeReport25">
      SELECT
        m.dept_code, m.name, m.id,
        IFNULL(ta.1a, '') AS '1a', IFNULL(tb.1b, '') AS '1b', IFNULL(tc.1c, '') AS '1c',
        IFNULL(ta.2a, '') AS '2a', IFNULL(tb.2b, '') AS '2b', IFNULL(tc.2c, '') AS '2c',
        IFNULL(ta.3a, '') AS '3a', IFNULL(tb.3b, '') AS '3b', IFNULL(tc.3c, '') AS '3c',
        IFNULL(ta.4a, '') AS '4a', IFNULL(tb.4b, '') AS '4b', IFNULL(tc.4c, '') AS '4c',
        IFNULL(ta.5a, '') AS '5a', IFNULL(tb.5b, '') AS '5b', IFNULL(tc.5c, '') AS '5c',
        IFNULL(ta.6a, '') AS '6a', IFNULL(tb.6b, '') AS '6b', IFNULL(tc.6c, '') AS '6c',
        IFNULL(ta.7a, '') AS '7a', IFNULL(tb.7b, '') AS '7b', IFNULL(tc.7c, '') AS '7c',
        IFNULL(ta.8a, '') AS '8a', IFNULL(tb.8b, '') AS '8b', IFNULL(tc.8c, '') AS '8c',
        IFNULL(ta.9a, '') AS '9a', IFNULL(tb.9b, '') AS '9b', IFNULL(tc.9c, '') AS '9c',
        IFNULL(ta.10a, '') AS '10a', IFNULL(tb.10b, '') AS '10b', IFNULL(tc.10c, '') AS '10c',
        IFNULL(ta.11a, '') AS '11a', IFNULL(tb.11b, '') AS '11b', IFNULL(tc.11c, '') AS '11c',
        IFNULL(ta.12a, '') AS '12a', IFNULL(tb.12b, '') AS '12b', IFNULL(tc.12c, '') AS '12c',
        IFNULL(ta.a_total, '') AS 'a_total', IFNULL(tb.b_total, '') AS 'b_total', IFNULL(tc.c_total, '') AS 'c_total'
    FROM
        members_tbl m
        LEFT JOIN (
            SELECT
                id,
                SUM(CASE WHEN month = 1 THEN cnt END) AS '1a',
                SUM(CASE WHEN month = 2 THEN cnt END) AS '2a',
                SUM(CASE WHEN month = 3 THEN cnt END) AS '3a',
                SUM(CASE WHEN month = 4 THEN cnt END) AS '4a',
                SUM(CASE WHEN month = 5 THEN cnt END) AS '5a',
                SUM(CASE WHEN month = 6 THEN cnt END) AS '6a',
                SUM(CASE WHEN month = 7 THEN cnt END) AS '7a',
                SUM(CASE WHEN month = 8 THEN cnt END) AS '8a',
                SUM(CASE WHEN month = 9 THEN cnt END) AS '9a',
                SUM(CASE WHEN month = 10 THEN cnt END) AS '10a',
                SUM(CASE WHEN month = 11 THEN cnt END) AS '11a',
                SUM(CASE WHEN month = 12 THEN cnt END) AS '12a',
                SUM(cnt) AS a_total
            FROM (
                SELECT
                    id,
                  case
                    when date between ? AND ? then "01"
                    when date between ? AND ? then "02"
                    when date between ? AND ? then "03"
                    when date between ? AND ? then "04"
                    when date between ? AND ? then "05"
                    when date between ? AND ? then "06"
                    when date between ? AND ? then "07"
                    when date between ? AND ? then "08"
                    when date between ? AND ? then "09"
                    when date between ? AND ? then "10"
                    when date between ? AND ? then "11"
                    when date between ? AND ? then "12"
                    end as month,
                  count(id) AS cnt
                FROM commute_result_tbl
                WHERE date BETWEEN ? AND ? AND overtime_code = '2015_AA'
                GROUP BY id, month
            ) t1
            GROUP BY id
        ) ta
    ON m.id = ta.id
        LEFT JOIN (
                SELECT
                    id,
                    SUM(CASE WHEN month = 1 THEN cnt END) AS '1b',
                    SUM(CASE WHEN month = 2 THEN cnt END) AS '2b',
                    SUM(CASE WHEN month = 3 THEN cnt END) AS '3b',
                    SUM(CASE WHEN month = 4 THEN cnt END) AS '4b',
                    SUM(CASE WHEN month = 5 THEN cnt END) AS '5b',
                    SUM(CASE WHEN month = 6 THEN cnt END) AS '6b',
                    SUM(CASE WHEN month = 7 THEN cnt END) AS '7b',
                    SUM(CASE WHEN month = 8 THEN cnt END) AS '8b',
                    SUM(CASE WHEN month = 9 THEN cnt END) AS '9b',
                    SUM(CASE WHEN month = 10 THEN cnt END) AS '10b',
                    SUM(CASE WHEN month = 11 THEN cnt END) AS '11b',
                    SUM(CASE WHEN month = 12 THEN cnt END) AS '12b',
                    SUM(cnt) AS b_total
                FROM (
                    SELECT
                    id,
                  case
                    when date between ? AND ? then "01"
                    when date between ? AND ? then "02"
                    when date between ? AND ? then "03"
                    when date between ? AND ? then "04"
                    when date between ? AND ? then "05"
                    when date between ? AND ? then "06"
                    when date between ? AND ? then "07"
                    when date between ? AND ? then "08"
                    when date between ? AND ? then "09"
                    when date between ? AND ? then "10"
                    when date between ? AND ? then "11"
                    when date between ? AND ? then "12"
                    end as month,
                    count(id) AS cnt
                  FROM commute_result_tbl
                  WHERE date BETWEEN ? AND ? AND overtime_code = '2015_AB'
                  GROUP BY id, month
                ) t1
                GROUP BY id
        )tb
        ON m.id = tb.id
        LEFT JOIN (
                SELECT
                    id,
                    SUM(CASE WHEN month = 1 THEN cnt END) AS '1c',
                    SUM(CASE WHEN month = 2 THEN cnt END) AS '2c',
                    SUM(CASE WHEN month = 3 THEN cnt END) AS '3c',
                    SUM(CASE WHEN month = 4 THEN cnt END) AS '4c',
                    SUM(CASE WHEN month = 5 THEN cnt END) AS '5c',
                    SUM(CASE WHEN month = 6 THEN cnt END) AS '6c',
                    SUM(CASE WHEN month = 7 THEN cnt END) AS '7c',
                    SUM(CASE WHEN month = 8 THEN cnt END) AS '8c',
                    SUM(CASE WHEN month = 9 THEN cnt END) AS '9c',
                    SUM(CASE WHEN month = 10 THEN cnt END) AS '10c',
                    SUM(CASE WHEN month = 11 THEN cnt END) AS '11c',
                    SUM(CASE WHEN month = 12 THEN cnt END) AS '12c',
                    SUM(cnt) AS c_total
                FROM (
                    SELECT
                    id,
                  case
                    when date between ? AND ? then "01"
                    when date between ? AND ? then "02"
                    when date between ? AND ? then "03"
                    when date between ? AND ? then "04"
                    when date between ? AND ? then "05"
                    when date between ? AND ? then "06"
                    when date between ? AND ? then "07"
                    when date between ? AND ? then "08"
                    when date between ? AND ? then "09"
                    when date between ? AND ? then "10"
                    when date between ? AND ? then "11"
                    when date between ? AND ? then "12"
                    end as month,
                    count(id) AS cnt
                  FROM commute_result_tbl
                  WHERE date BETWEEN ? AND ? AND overtime_code = '2015_AC'
                  GROUP BY id, month
                ) t1
                GROUP BY id
        )tc
        ON m.id = tc.id

    ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name;
      </query>

      <query id="selectOverTimeWorkPayReport">
      SELECT
        m.dept_code, m.name, m.id,
        IFNULL(t2.1, '') AS '1', IFNULL(t2.2, '') AS '2', IFNULL(t2.3, '') AS '3', IFNULL(t2.4, '') AS '4', IFNULL(t2.5, '') AS '5', IFNULL(t2.6, '') AS '6',
                IFNULL(t2.7, '') AS '7', IFNULL(t2.8, '') AS '8', IFNULL(t2.9, '') AS '9', IFNULL(t2.10, '') AS '10', IFNULL(t2.11, '') AS '11', IFNULL(t2.12, '') AS '12',
                IFNULL(t2.total, '') AS total
      FROM
        members_tbl m
            LEFT JOIN (
            SELECT
              id,
              SUM(CASE WHEN month = 1 THEN overtime_pay END) AS '1',
              SUM(CASE WHEN month = 2 THEN overtime_pay END) AS '2',
              SUM(CASE WHEN month = 3 THEN overtime_pay END) AS '3',
              SUM(CASE WHEN month = 4 THEN overtime_pay END) AS '4',
              SUM(CASE WHEN month = 5 THEN overtime_pay END) AS '5',
              SUM(CASE WHEN month = 6 THEN overtime_pay END) AS '6',
              SUM(CASE WHEN month = 7 THEN overtime_pay END) AS '7',
              SUM(CASE WHEN month = 8 THEN overtime_pay END) AS '8',
              SUM(CASE WHEN month = 9 THEN overtime_pay END) AS '9',
              SUM(CASE WHEN month = 10 THEN overtime_pay END) AS '10',
              SUM(CASE WHEN month = 11 THEN overtime_pay END) AS '11',
              SUM(CASE WHEN month = 12 THEN overtime_pay END) AS '12',
              SUM(overtime_pay) AS total
            FROM (
                SELECT
                c.id,
                SUBSTRING(c.date, 6, 2) AS month,
                SUM( o.overtime_pay ) AS overtime_pay
                FROM
                  commute_result_tbl c
                  LEFT JOIN overtime_code_tbl o
                  ON c.overtime_code = o.code
                WHERE
                  c.year = ?
                  AND c.date BETWEEN ? AND ?
                  AND c.overtime_code IN ('2015_AA', '2015_AB','2015_AC')
                GROUP BY id, month
            ) t1
            GROUP BY id
            ) t2
        ON m.id = t2.id

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name
      </query>

      <query id="selectOverTimeWorkPayReport25">
      SELECT
        m.dept_code, m.name, m.id,
        IFNULL(t2.1, '') AS '1', IFNULL(t2.2, '') AS '2', IFNULL(t2.3, '') AS '3', IFNULL(t2.4, '') AS '4', IFNULL(t2.5, '') AS '5', IFNULL(t2.6, '') AS '6',
        IFNULL(t2.7, '') AS '7', IFNULL(t2.8, '') AS '8', IFNULL(t2.9, '') AS '9', IFNULL(t2.10, '') AS '10', IFNULL(t2.11, '') AS '11', IFNULL(t2.12, '') AS '12',
        IFNULL(t2.total, '') AS total
      FROM
        members_tbl m
        LEFT JOIN (
            SELECT
              id,
              SUM(CASE WHEN month = 1 THEN overtime_pay END) AS '1',
              SUM(CASE WHEN month = 2 THEN overtime_pay END) AS '2',
              SUM(CASE WHEN month = 3 THEN overtime_pay END) AS '3',
              SUM(CASE WHEN month = 4 THEN overtime_pay END) AS '4',
              SUM(CASE WHEN month = 5 THEN overtime_pay END) AS '5',
              SUM(CASE WHEN month = 6 THEN overtime_pay END) AS '6',
              SUM(CASE WHEN month = 7 THEN overtime_pay END) AS '7',
              SUM(CASE WHEN month = 8 THEN overtime_pay END) AS '8',
              SUM(CASE WHEN month = 9 THEN overtime_pay END) AS '9',
              SUM(CASE WHEN month = 10 THEN overtime_pay END) AS '10',
              SUM(CASE WHEN month = 11 THEN overtime_pay END) AS '11',
              SUM(CASE WHEN month = 12 THEN overtime_pay END) AS '12',
                 SUM(overtime_pay) AS total
            FROM (
                select id,
                  case
                    when date between ? AND ? then "01"
                    when date between ? AND ? then "02"
                    when date between ? AND ? then "03"
                    when date between ? AND ? then "04"
                    when date between ? AND ? then "05"
                    when date between ? AND ? then "06"
                    when date between ? AND ? then "07"
                    when date between ? AND ? then "08"
                    when date between ? AND ? then "09"
                    when date between ? AND ? then "10"
                    when date between ? AND ? then "11"
                    when date between ? AND ? then "12"
                    end as month,
                  SUM( o.overtime_pay ) AS overtime_pay
                from
                  commute_result_tbl c
                  LEFT JOIN overtime_code_tbl o
                  ON c.overtime_code = o.code
                where date between ? AND ? AND c.overtime_code IN ('2015_AA', '2015_AB','2015_AC')
                group by id, month
            ) t1
            GROUP BY id
        ) t2
        ON m.id = t2.id

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name;
      </query>

      <query id="selectHolidayWorkTypeReport">
      SELECT
        m.dept_code, m.name, m.id,
        IFNULL(ta.1a, '') AS '1a', IFNULL(tb.1b, '') AS '1b', IFNULL(tc.1c, '') AS '1c',
        IFNULL(ta.2a, '') AS '2a', IFNULL(tb.2b, '') AS '2b', IFNULL(tc.2c, '') AS '2c',
        IFNULL(ta.3a, '') AS '3a', IFNULL(tb.3b, '') AS '3b', IFNULL(tc.3c, '') AS '3c',
        IFNULL(ta.4a, '') AS '4a', IFNULL(tb.4b, '') AS '4b', IFNULL(tc.4c, '') AS '4c',
        IFNULL(ta.5a, '') AS '5a', IFNULL(tb.5b, '') AS '5b', IFNULL(tc.5c, '') AS '5c',
        IFNULL(ta.6a, '') AS '6a', IFNULL(tb.6b, '') AS '6b', IFNULL(tc.6c, '') AS '6c',
        IFNULL(ta.7a, '') AS '7a', IFNULL(tb.7b, '') AS '7b', IFNULL(tc.7c, '') AS '7c',
        IFNULL(ta.8a, '') AS '8a', IFNULL(tb.8b, '') AS '8b', IFNULL(tc.8c, '') AS '8c',
        IFNULL(ta.9a, '') AS '9a', IFNULL(tb.9b, '') AS '9b', IFNULL(tc.9c, '') AS '9c',
        IFNULL(ta.10a, '') AS '10a', IFNULL(tb.10b, '') AS '10b', IFNULL(tc.10c, '') AS '10c',
        IFNULL(ta.11a, '') AS '11a', IFNULL(tb.11b, '') AS '11b', IFNULL(tc.11c, '') AS '11c',
        IFNULL(ta.12a, '') AS '12a', IFNULL(tb.12b, '') AS '12b', IFNULL(tc.12c, '') AS '12c',
        IFNULL(ta.a_total, '') AS 'a_total', IFNULL(tb.b_total, '') AS 'b_total', IFNULL(tc.c_total, '') AS 'c_total'
      FROM
        members_tbl m
              LEFT JOIN (
                SELECT
            id,
            SUM(CASE WHEN month = 1 THEN cnt END) AS '1a',
            SUM(CASE WHEN month = 2 THEN cnt END) AS '2a',
            SUM(CASE WHEN month = 3 THEN cnt END) AS '3a',
            SUM(CASE WHEN month = 4 THEN cnt END) AS '4a',
            SUM(CASE WHEN month = 5 THEN cnt END) AS '5a',
            SUM(CASE WHEN month = 6 THEN cnt END) AS '6a',
            SUM(CASE WHEN month = 7 THEN cnt END) AS '7a',
            SUM(CASE WHEN month = 8 THEN cnt END) AS '8a',
            SUM(CASE WHEN month = 9 THEN cnt END) AS '9a',
            SUM(CASE WHEN month = 10 THEN cnt END) AS '10a',
            SUM(CASE WHEN month = 11 THEN cnt END) AS '11a',
            SUM(CASE WHEN month = 12 THEN cnt END) AS '12a',
            SUM(cnt) AS a_total
          FROM (
            SELECT
              id,
              SUBSTRING(date,6,2) AS month,
              COUNT(id) AS cnt
            FROM
              commute_result_tbl
            WHERE
              year = ?
              AND date BETWEEN ? AND ?
              AND overtime_code = '2015_BA'
            GROUP BY id, month
          ) t1
          GROUP BY id
        ) ta
            ON m.id = ta.id
        LEFT JOIN (
          SELECT
            id,
            SUM(CASE WHEN month = 1 THEN cnt END) AS '1b',
            SUM(CASE WHEN month = 2 THEN cnt END) AS '2b',
            SUM(CASE WHEN month = 3 THEN cnt END) AS '3b',
            SUM(CASE WHEN month = 4 THEN cnt END) AS '4b',
            SUM(CASE WHEN month = 5 THEN cnt END) AS '5b',
            SUM(CASE WHEN month = 6 THEN cnt END) AS '6b',
            SUM(CASE WHEN month = 7 THEN cnt END) AS '7b',
            SUM(CASE WHEN month = 8 THEN cnt END) AS '8b',
            SUM(CASE WHEN month = 9 THEN cnt END) AS '9b',
            SUM(CASE WHEN month = 10 THEN cnt END) AS '10b',
            SUM(CASE WHEN month = 11 THEN cnt END) AS '11b',
            SUM(CASE WHEN month = 12 THEN cnt END) AS '12b',
            SUM(cnt) AS b_total
          FROM (
            SELECT
              id,
              SUBSTRING(date,6,2) AS month,
              COUNT(id) AS cnt
            FROM
              commute_result_tbl
            WHERE
              year = ?
              AND date BETWEEN ? AND ?
              AND overtime_code = '2015_BB'
            GROUP BY id, month
          ) t1
          GROUP BY id
        )tb
        ON m.id = tb.id
        LEFT JOIN (
            SELECT
              id,
              SUM(CASE WHEN month = 1 THEN cnt END) AS '1c',
              SUM(CASE WHEN month = 2 THEN cnt END) AS '2c',
              SUM(CASE WHEN month = 3 THEN cnt END) AS '3c',
              SUM(CASE WHEN month = 4 THEN cnt END) AS '4c',
              SUM(CASE WHEN month = 5 THEN cnt END) AS '5c',
              SUM(CASE WHEN month = 6 THEN cnt END) AS '6c',
              SUM(CASE WHEN month = 7 THEN cnt END) AS '7c',
              SUM(CASE WHEN month = 8 THEN cnt END) AS '8c',
              SUM(CASE WHEN month = 9 THEN cnt END) AS '9c',
              SUM(CASE WHEN month = 10 THEN cnt END) AS '10c',
              SUM(CASE WHEN month = 11 THEN cnt END) AS '11c',
              SUM(CASE WHEN month = 12 THEN cnt END) AS '12c',
              SUM(cnt) AS c_total
            FROM (
              SELECT
                id,
                SUBSTRING(date,6,2) AS month,
                COUNT(id) AS cnt
              FROM
                commute_result_tbl
              WHERE
                year = ?
                AND date BETWEEN ? AND ?
                AND overtime_code = '2015_BC'
              GROUP BY id, month
            ) t1
            GROUP BY id
        )tc
        ON m.id = tc.id

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name
      </query>

      <query id="selectHolidayWorkPayReport">
      SELECT
        m.dept_code, m.name, m.id,
        IFNULL(t2.1, '') AS '1', IFNULL(t2.2, '') AS '2', IFNULL(t2.3, '') AS '3', IFNULL(t2.4, '') AS '4', IFNULL(t2.5, '') AS '5', IFNULL(t2.6, '') AS '6',
                IFNULL(t2.7, '') AS '7', IFNULL(t2.8, '') AS '8', IFNULL(t2.9, '') AS '9', IFNULL(t2.10, '') AS '10', IFNULL(t2.11, '') AS '11', IFNULL(t2.12, '') AS '12',
                IFNULL(t2.total, '') AS total
      FROM
        members_tbl m
            LEFT JOIN (
            SELECT
              id,
              SUM(CASE WHEN month = 1 THEN overtime_pay END) AS '1',
              SUM(CASE WHEN month = 2 THEN overtime_pay END) AS '2',
              SUM(CASE WHEN month = 3 THEN overtime_pay END) AS '3',
              SUM(CASE WHEN month = 4 THEN overtime_pay END) AS '4',
              SUM(CASE WHEN month = 5 THEN overtime_pay END) AS '5',
              SUM(CASE WHEN month = 6 THEN overtime_pay END) AS '6',
              SUM(CASE WHEN month = 7 THEN overtime_pay END) AS '7',
              SUM(CASE WHEN month = 8 THEN overtime_pay END) AS '8',
              SUM(CASE WHEN month = 9 THEN overtime_pay END) AS '9',
              SUM(CASE WHEN month = 10 THEN overtime_pay END) AS '10',
              SUM(CASE WHEN month = 11 THEN overtime_pay END) AS '11',
              SUM(CASE WHEN month = 12 THEN overtime_pay END) AS '12',
                               SUM(overtime_pay) AS total
            FROM (
                SELECT
                  c.id,
                  SUBSTRING(c.date, 6, 2) AS month,
                  SUM( o.overtime_pay ) AS overtime_pay

                FROM
                  commute_result_tbl c
                  LEFT JOIN overtime_code_tbl o
                  on c.overtime_code = o.code
                WHERE
                  c.year = ?
                  AND c.date BETWEEN ? AND ?
                  AND c.overtime_code IN ('2015_BA', '2015_BB','2015_BC')
                GROUP BY id, month
            ) t1
            GROUP BY id
            ) t2
        ON m.id = t2.id

      ORDER BY
        m.dept_code, m.part_code, m.position_code, m.name
      </query>

      <query id="selectReportCommuteResultTbl">
      SELECT
          m.id,
          m.name,
                m.leave_company,
                p.name AS position_name,
          m.dept_code,
          d.name AS dept_name,
          partTbl.name AS part_name,
          c.*
      FROM
        members_tbl m

        INNER JOIN dept_code_tbl d
          ON d.code = m.dept_code

        INNER JOIN position_code_tbl p
          ON p.code = m.position_code

          LEFT JOIN part_code_tbl partTbl
          ON partTbl.code = m.part_code

          RIGHT JOIN (
          SELECT
            c.year,
            c.date,
            c.id,
            c.department,
            c.name,
            IFNULL( date_format(c.standard_in_time, '%Y-%m-%d %H:%i'), NULL) AS standard_in_time,
            IFNULL( date_format(c.standard_out_time, '%Y-%m-%d %H:%i'), NULL) AS standard_out_time,
            IFNULL( date_format(c.in_time, '%Y-%m-%d %H:%i'), NULL) AS in_time,
            IFNULL( date_format(c.out_time, '%Y-%m-%d %H:%i'), NULL) AS out_time,
            c.in_time_type,
            IF (c.in_time_type = 1, '정상출근', '자동셋팅') AS in_time_type_name,
            c.out_time_type,
            IF (c.out_time_type = 1, '정상퇴근', '자동셋팅') AS out_time_type_name,
            c.work_type,
            wt.name AS work_type_name,
            c.vacation_code,
            vc.name AS vacation_name,
            c.out_office_code,
            oc.name AS out_office_name,
            c.overtime_code,
            ov.name AS overtime_name,
            IF(c.late_time = 0, '', SUBSTRING( SEC_TO_TIME( c.late_time *60), 1, 5) ) AS late_time,
            IF(c.over_time = 0, '', SUBSTRING( SEC_TO_TIME( c.over_time *60), 1, 5) ) AS over_time,
            c.in_time_change,
            c.out_time_change,
            c.comment_count,
            c.overtime_code_change,
            IF(c.early_time = 0, '', SUBSTRING( SEC_TO_TIME( c.early_time *60), 1, 5) ) as early_time,
            IF(c.not_pay_over_time = 0, '', SUBSTRING( SEC_TO_TIME( c.not_pay_over_time *60), 1, 5) ) AS not_pay_over_time,
            if(it.doc_num is null, null,  a.submit_comment) as submit_comment,
            c.except
          FROM
            commute_result_tbl c
            left join office_code_tbl oc
            on oc.code = c.out_office_code
            left join office_code_tbl vc
            on vc.code = c.vacation_code
            left join overtime_code_tbl ov
            on ov.code = c.overtime_code
            left join work_type_code_tbl wt
            on wt.code = c.work_type
            left join in_office_tbl it
            on it.id = c.id
            and it.date = c.date
            and it.year = c.year
            left join approval_tbl a
            on it.doc_num = a.doc_num
          WHERE
            c.year = ?
            AND c.date BETWEEN ? AND ?
        ) c
          ON m.id = c.id

        ORDER BY m.dept_code, m.part_code, m.position_code, m.name, c.date
      </query>
    </group>
    <group id ="message">
      <query id="getMessage">
        select * from msg_tbl where no = 1
    </query>
    <query id="setMessage">
      insert into msg_tbl
        (no, text, visible)
      values
        (1, ?, ?)
      ON DUPLICATE KEY UPDATE
        text = ?,
        visible = ?
    </query>
    <query id="getCleanDay">
        select * from msg_tbl where no = 2
    </query>
    <query id="setCleanDay">
      insert into msg_tbl
        (no, text, visible)
      values
        (2, ?, ?)
      ON DUPLICATE KEY UPDATE
        text = ?,
        visible = ?
    </query>
  </group>
  <group id="department">
    <query id="selectDepartment">
      select
        *, (SELECT name FROM members_tbl where id = leader) user_name
      from
        dept_code_tbl
      ORDER BY `use` desc, code
    </query>
    <query id="selectUserDepartmentList">
      select
         *, (SELECT name FROM members_tbl where id = leader) user_name
      from
        dept_code_tbl
      ORDER BY `use` desc, code
    </query>
    <query id="insertDepartment">
      INSERT INTO dept_code_tbl
        (code, name, area, leader)
      VALUES
        (?, ?, ?, ?)
    </query>
    <query id="updateDepartment">
      UPDATE
        dept_code_tbl
      SET
        code=?,
        name=?,
        area=?,
        leader=?,
        `use`=?
      WHERE code=?
    </query>
    <query id="deleteDepartment">
      delete from dept_code_tbl where code=?
    </query>
    <query id= "selectCodeData">
      select
        dept_code
      FROM
        members_tbl
      where dept_code = ?
    </query>
  </group>

  <group id="part">
    <query id="selectPart">
      select
        code, name, leader, (SELECT name FROM members_tbl where id = leader) user_name, `use`
      from
        part_code_tbl
      ORDER BY code
    </query>
    <query id="selectUserPartList">
      select
         code, name, leader, (SELECT name FROM members_tbl where id = leader) AS user_name, `use`
      from
        part_code_tbl
      ORDER BY code
    </query>
    <query id="insertPart">
      INSERT INTO part_code_tbl
        (code, name, leader, `use`)
      VALUES
        (?, ?, ?, ?)
    </query>
    <query id="updatePart">
      UPDATE
        part_code_tbl
      SET
        code=?,
        name=?,
        leader=?,
        `use`=?
      WHERE code=?
    </query>
    <query id="deletePart">
      delete from part_code_tbl where code=?
    </query>
    <query id= "selectCodeData">
      select
        part_code
      FROM
        members_tbl
      where part_code = ?
    </query>
  </group>

  <group id="position">
    <query id="selectPosition">
      select
         *
      from
        position_code_tbl
      ORDER BY code
    </query>
    <query id="insertPosition">
      INSERT INTO position_code_tbl
        (code, name)
      VALUES
        (?, ?)
    </query>
    <query id="updatePosition">
      UPDATE
        position_code_tbl
      SET
        name=?
      WHERE
        code=?
    </query>
    <query id="deletePosition">
      delete from position_code_tbl where code=?
    </query>
    <query id= "selectPositionCode">
      select
        position_code
      FROM
        members_tbl
      where position_code = ?
    </query>
  </group>

  <group id="room">
    <query id="selectRoomList">
      select
        *
      from
        room_tbl;
    </query>
    <query id="insertRoomList">
      INSERT INTO room_tbl
        (name, `use`)
      VALUES
        (?, ?)
    </query>
    <query id="updateRoomList">
      UPDATE room_tbl
        set name = ?, `use` = ?
      WHERE
        `index` = ?
    </query>
  </group>
  <group id="roomReg">
    <query id="selectRoomRegList">
      select
        *, 
        (SELECT name FROM members_tbl where id = member_id) user_name,
        (SELECT name FROM room_tbl where `index` = room_index) AS room_name
      from
        room_reserve_tbl
      where
        date between DATE(?) AND DATE(?)
      order by
        date, start_time
    </query>
    <query id="selectRoomRegBefore">
      select
        *
      from
        room_reserve_tbl
      where
        date = ? AND
        TIME(?) &gt; start_time AND TIME(?) &lt; end_time AND
        room_index = ?
    </query>
    <query id="selectRoomRegByDateTime">
      select
        *, 
        (SELECT name FROM room_tbl where `index` = room_index) AS room_name
      from
        room_reserve_tbl
      where
        date = ? AND
        TIME(?) = start_time;
    </query>
    <query id="insertRoomReg">
      insert into room_reserve_tbl(room_index, member_id, title, date, start_time, end_time, description, attendance_list)
      values(?,?,?,?,?,?,?,?);
    </query>
    <query id="updateRoomReg">
      update room_reserve_tbl set room_index = ?, title =?, date = ?, start_time = ?, end_time = ?, description = ?, attendance_list = ?
      where `index`=?;
    </query>
    <query id="deleteRoomReg">
      delete from room_reserve_tbl where `index`=?;
    </query>
  </group>

  <group id="officeItem">
    <query id="selectOfficeItemCodeList">
      SELECT
        *
      FROM
        office_item_category_tbl
      ORDER BY category_code, category_type, category_name
    </query>
    <query id="insertOfficeItemCode">
          INSERT INTO office_item_category_tbl
        (category_code, category_type, category_name)
      VALUES
        (?,?,?)
    </query>
    <query id="deleteOfficeItemCode">
      DELETE
      FROM
        office_item_category_tbl
      WHERE
        category_code=?
    </query>
     <query id="updateOfficeItemCode">
      UPDATE
        office_item_category_tbl
      SET
        category_type = ?,
        category_name =?
      WHERE category_code=?
    </query>
    <query id="getOfficeItemCodeUseCount">
      SELECT
        count(*) cnt
      FROM
        office_item_tbl
      WHERE
        serial_yes like ?"%"
    </query>
  </group>

    <group id="officeitem">
      <query id="selectIdByOfficeItem">
        SELECT serial_yes,serial_factory,vendor,model_no,
          (SELECT category_name FROM office_item_category_tbl B where B.category_code = A.category_code) category_name,
          category_code, category_type,category_index,price,surtax,price_buy,
          date_format(buy_date, '%Y-%m-%d') AS buy_date,
          date_format(disposal_date, '%Y-%m-%d') AS disposal_date,
          date_format(disposal_account, '%Y-%m-%d') AS disposal_account,
          date_format(expiration_date, '%Y-%m-%d') AS expiration_date,
          use_dept,use_user,
          (select name from  dept_code_tbl dept where dept.code=A.use_dept) use_dept_name,
          (select name from  members_tbl mem  where mem.id=A.use_user) use_user_name,
          location,state,memo
        FROM office_item_tbl A
        WHERE A.serial_yes=?
      </query>
      <query id="selectOfficeItemALLList">
        SELECT serial_yes,serial_factory,vendor,model_no,
          (SELECT category_name FROM office_item_category_tbl B where B.category_code = A.category_code) category_name,
          category_code,category_type,category_index,price,surtax,price_buy,
          date_format(buy_date, '%Y-%m-%d') AS buy_date,
          date_format(disposal_date, '%Y-%m-%d') AS disposal_date,
          date_format(disposal_account, '%Y-%m-%d') AS disposal_account,
          date_format(expiration_date, '%Y-%m-%d') AS expiration_date,
          use_dept,use_user,
          (select name from  dept_code_tbl dept where dept.code=A.use_dept) use_dept_name,
          (select name from  members_tbl mem  where mem.id=A.use_user) use_user_name,
          location,state,memo
        FROM office_item_tbl A
      </query>
      <query id="selectOfficeItemCategoryCodeList">
        SELECT serial_yes,serial_factory,vendor,model_no,
          (SELECT category_name FROM office_item_category_tbl B where B.category_code = A.category_code) category_name,
          category_code,category_type,category_index,price,surtax,price_buy,
          date_format(buy_date, '%Y-%m-%d') AS buy_date,
          date_format(disposal_date, '%Y-%m-%d') AS disposal_date,
          date_format(disposal_account, '%Y-%m-%d') AS disposal_account,
          date_format(expiration_date, '%Y-%m-%d') AS expiration_date,
          use_dept,use_user,
          (select name from  dept_code_tbl dept where dept.code=A.use_dept) use_dept_name,
          (select name from  members_tbl mem  where mem.id=A.use_user) use_user_name,
          location,state,memo
        FROM office_item_tbl A
        where A.category_code=?
      </query>
      <query id="selectOfficeItemCategoryCodeTypeList">
        SELECT serial_yes,serial_factory,vendor,model_no,
          (SELECT category_name FROM office_item_category_tbl B where B.category_code = A.category_code) category_name,
          category_code,category_type,category_index,price,surtax,price_buy,
          date_format(buy_date, '%Y-%m-%d') AS buy_date,
          date_format(disposal_date, '%Y-%m-%d') AS disposal_date,
          date_format(disposal_account, '%Y-%m-%d') AS disposal_account,
          date_format(expiration_date, '%Y-%m-%d') AS expiration_date,
          use_dept,use_user,
          (select name from  dept_code_tbl dept where dept.code=A.use_dept) use_dept_name,
          (select name from  members_tbl mem  where mem.id=A.use_user) use_user_name,
          location,state,memo
        FROM office_item_tbl A
        where A.category_type=?
      </query>
      <query id="empty"></query>
      <query id="insertOfficeItem">
        insert into office_item_tbl(serial_yes,serial_factory,vendor,model_no,
          category_code,category_index,category_type,price,surtax,price_buy,buy_date,disposal_date,disposal_account,expiration_date,use_dept,use_user,location,state,memo)
          values(?,?,?,?,?,?,(SELECT category_type FROM office_item_category_tbl where category_code = ?),?,?,?,?,?,?,?,?,?,?,?,?)
      </query>
      <query id="deleteOfficeItem">delete from office_item_tbl where serial_yes=?</query>
      <query id="updateOfficeItem">
        UPDATE
          office_item_tbl
        SET
          serial_factory=?,
          vendor=?,
          model_no=?,
          category_code=?,
          price=?,
          surtax=?,
          price_buy=?,
          buy_date=?,
          disposal_date=?,
          disposal_account=?,
          expiration_date=?,
          use_dept=?,
          use_user=?,
          location=?,
          state=?,
          memo=?
        WHERE serial_yes=?
      </query>
      <query id="getOfficeItemMaxCategoryIndex">
        select (ifnull(MAX(category_index),0)+1) as category_index from office_item_tbl where category_code=?
      </query>
    </group>

  <group id="officeItemHistory">
    <query id="selectOfficeItemHistoryList">
      SELECT
        *
      FROM
        office_item_history_tbl
      WHERE
        str_to_date(history_date, "%Y-%m-%d %H:%i:%S") between str_to_date(?,"%Y-%m-%d") and str_to_date(?,"%Y-%m-%d")
      AND
        category_type=?
      AND
        serial_yes like ?"%"
    </query>
    <query id="selectOfficeItemHistoryListV2">
      SELECT
        *
      FROM
        office_item_history_tbl
      WHERE
        serial_yes = ?
    </query>
    <query id="selectOfficeItemHistoryListAll">
      SELECT
        *
      FROM
        office_item_history_tbl
      WHERE
        str_to_date(history_date, "%Y-%m-%d %H:%i:%S") between str_to_date(?,"%Y-%m-%d") and str_to_date(?,"%Y-%m-%d")
      ORDER BY history_date
    </query>
    <query id="selectOfficeItemHistoryListAllV2">
      SELECT
        *
      FROM
        office_item_history_tbl
      WHERE
        str_to_date(history_date, "%Y-%m-%d %H:%i:%S") between str_to_date(?,"%Y-%m-%d") and str_to_date(?,"%Y-%m-%d")
      AND
        category_type=?
      ORDER BY history_date
    </query>
    <query id="insertOfficeItemHistory">
      INSERT INTO
        office_item_history_tbl(serial_yes,category_type,history_date,type,title,repair_price,use_user,use_dept,name,change_user_id,memo)
      VALUES(?,?,?,?,?,?,?,?,?,?,?)
    </query>
    <query id="deleteOfficeItemHistory">
      DELETE FROM
        office_item_history_tbl
      WHERE
        serial_yes =?
    </query>
  </group>

  <group id="IpAssignedManage">
    <query id="selectIpAll">
      SELECT ip, (SELECT concat(name, '(', code, ')') FROM dept_code_tbl where use_dept = code
            UNION
            SELECT concat(name, '(', id, ')') FROM members_tbl where use_user = id) use_user,
            memo
      from ip_tbl;
    </query>
    <query id="selectUserInfo">
      select concat(name, '(', id, ')') from members_tbl;
    </query>
    <query id="deleteIP">
      delete from ip_tbl where `ip`=?;
    </query>
    <query id="updateIP">
      update ip_tbl set `use_dept` = ?, `use_user` =?, `memo` = ?
      where `ip`=?;
    </query>
    <query id="insertIP">
      insert into ip_tbl(ip, use_dept, use_user, memo)
      values(?,?,?,?);
    </query>
  </group>
  <group id="usage">
    <query id="selectUsageListbyUser">
      SELECT
        B.r1 AS "id", B.r2 AS "name", B.r3 AS "dept", B.r4 AS "hardware", B.r5 AS "officeitem",
        group_concat(A.ip ORDER BY INET_ATON(A.ip)) AS "ip", B.m1 AS "leave_company"
      FROM
        (SELECT *
          FROM ip_tbl
        ) A RIGHT JOIN (
          SELECT
            mem.id r1, mem.name r2, mem.dept_code r3, mem.leave_company m1,
            group_concat(CASE WHEN off.category_type = '전산' THEN serial_yes ELSE NULL END ORDER BY off.serial_yes) r4,
            group_concat(CASE WHEN off.category_type = '사무' THEN serial_yes ELSE NULL END ORDER BY off.serial_yes) r5
          FROM
            members_tbl mem LEFT JOIN office_item_tbl off ON mem.id = off.use_user GROUP BY mem.id
          ORDER BY
            mem.name
        ) B ON B.r1 = A.use_user
      WHERE B.r1 = ?
    </query>

    <query id="selectUsageListALL">
      (
        SELECT
          "" id, "" name, B.r3 "dept", B.r4 AS "hardware", B.r5 AS "officeitem",
          group_concat(A.ip ORDER BY INET_ATON(A.ip)) AS "ip", "" leave_company
        FROM
          (SELECT *
            FROM ip_tbl
          ) A RIGHT JOIN (
            SELECT
              "" r1, "" r2, D.code r3,
              group_concat(CASE WHEN off.category_type = '전산' THEN serial_yes ELSE NULL END ORDER BY off.serial_yes) r4,
              group_concat(CASE WHEN off.category_type = '사무' THEN serial_yes ELSE NULL END ORDER BY off.serial_yes) r5
            FROM
              (select * from dept_code_tbl where `use`='1') D LEFT JOIN office_item_tbl off ON D.code = off.use_dept GROUP BY D.code
          ) B ON B.r3 = A.use_dept
        GROUP BY B.r3
      ) UNION (
        SELECT
          B.r1 AS "id", B.r2 AS "name", B.r3 AS "dept", B.r4 AS "hardware", B.r5 AS "officeitem",
          group_concat(A.ip ORDER BY INET_ATON(A.ip)) AS "ip", B.m1 AS "leave_company"
        FROM
          (SELECT *
            FROM ip_tbl
          ) A RIGHT JOIN (
            SELECT
              mem.id r1, mem.name r2, mem.dept_code r3, mem.leave_company m1,
              group_concat(CASE WHEN off.category_type = '전산' THEN serial_yes ELSE NULL END ORDER BY off.serial_yes) r4,
              group_concat(CASE WHEN off.category_type = '사무' THEN serial_yes ELSE NULL END ORDER BY off.serial_yes) r5
            FROM
              members_tbl mem LEFT JOIN office_item_tbl off ON mem.id = off.use_user GROUP BY mem.id
            ORDER BY
              mem.name
          ) B ON B.r1 = A.use_user
        GROUP BY B.r1
      )
    </query>

    <query id="selectUsageList">
      (
        SELECT
          "" id, "" name, B.r3 "dept", B.r4 AS "hardware", B.r5 AS "officeitem",
          group_concat(A.ip ORDER BY INET_ATON(A.ip)) AS "ip", "" leave_company
        FROM
          (SELECT *
            FROM ip_tbl
          ) A RIGHT JOIN (
            SELECT
              "" r1, "" r2, D.code r3,
              group_concat(CASE WHEN off.category_type = '전산' THEN serial_yes ELSE NULL END ORDER BY off.serial_yes) r4,
              group_concat(CASE WHEN off.category_type = '사무' THEN serial_yes ELSE NULL END ORDER BY off.serial_yes) r5
            FROM
              (select * from dept_code_tbl where `use`='1') D LEFT JOIN office_item_tbl off ON D.code = off.use_dept GROUP BY D.code
          ) B ON B.r3 = A.use_dept
        WHERE B.r3 = ?
        GROUP BY B.r3
      ) UNION (
        SELECT
          B.r1 AS "id", B.r2 AS "name", B.r3 AS "dept", B.r4 AS "hardware", B.r5 AS "officeitem",
          group_concat(A.ip ORDER BY INET_ATON(A.ip)) AS "ip", B.m1 AS "leave_company"
        FROM
          (SELECT *
            FROM ip_tbl
          ) A RIGHT JOIN (
            SELECT
              mem.id r1, mem.name r2, mem.dept_code r3, mem.leave_company m1,
              group_concat(CASE WHEN off.category_type = '전산' THEN serial_yes ELSE NULL END ORDER BY off.serial_yes) r4,
              group_concat(CASE WHEN off.category_type = '사무' THEN serial_yes ELSE NULL END ORDER BY off.serial_yes) r5
            FROM
              members_tbl mem LEFT JOIN office_item_tbl off ON mem.id = off.use_user GROUP BY mem.id
            ORDER BY
              mem.name
          ) B ON B.r1 = A.use_user
        WHERE B.r3 = ?
        GROUP BY B.r1
      )
    </query>

    <query id="selectUsageDetailList">
      SELECT
        mem.name, cat.category_name, off.serial_yes, off.model_no, date_format(off.buy_date, '%Y-%m-%d') AS buy_date
      FROM
        members_tbl mem RIGHT JOIN office_item_tbl off ON mem.id = off.use_user
        LEFT JOIN office_item_category_tbl cat ON off.category_code = cat.category_code
      WHERE
        mem.id = ?
      ORDER BY off.serial_yes
    </query>

    <query id="selectUsageDetailListbyDept">
      SELECT
        "" name, cat.category_name, off.serial_yes, off.model_no, date_format(off.buy_date, '%Y-%m-%d') AS buy_date
      FROM
        office_item_tbl off LEFT JOIN office_item_category_tbl cat ON off.category_code = cat.category_code
      WHERE
        off.use_dept = ?
      ORDER BY off.serial_yes
    </query>

    <query id="selectUsageDetailListAll">
      SELECT
        mem.name, off.use_dept dept, cat.category_name, off.serial_yes, off.model_no, date_format(off.buy_date, '%Y-%m-%d') AS buy_date
      FROM
        members_tbl mem LEFT JOIN office_item_tbl off ON mem.id = off.use_user
        LEFT JOIN office_item_category_tbl cat ON off.category_code = cat.category_code
      ORDER BY mem.name
    </query>


  </group>

  <group id ="statistics">
    <query id="selectAvgInOutTime"> 
      SELECT name, sec_to_time(avg(time_to_sec(in_time))) as in_time_avg, sec_to_time(avg(if(time_to_sec(out_time) &lt; 54000, 86400+time_to_sec(out_time), time_to_sec(out_time)))) as out_time_avg 
      FROM commute.commute_result_tbl 
      WHERE year = ? AND date &gt;= ? and date &lt;= ? AND 
        work_type not in (30, 31, 40, 41) AND 
        (out_office_code is NULL OR out_office_code != 'W01') AND
        (vacation_code is NULL OR (vacation_code not like '%V%')) AND 
        in_time is not null AND out_time is not null AND
        id = ?
    </query>
    <query id="selectPageUrlCount">
      select
        count
      from
        statistics_page_view
      where
        page_url = ?
    </query>
    <query id="updatePageUrlCount">
      insert into statistics_page_view
        (page_url, count)
      values
        (?, ?)
      ON DUPLICATE KEY UPDATE
            page_url = ?,
            count = ?
    </query>
    <query id="selectAbnormalDeptSummary">
      SELECT
        department,
        count(if(work_type='10',1, null)) AS 'late',
        count(if(work_type='01',1, null)) AS 'leave_early',
        count(if(work_type='11',1, null)) AS 'late_leave_early',
        count(if(work_type='21',1, null)) AS 'absent',
        count(if(work_type='50',1, null)) AS 'data_none_1',
        count(if(work_type='51',1, null)) AS 'data_none_2'
      FROM
        commute_result_tbl
      WHERE
        date between ? AND ?
      group by
        department
    </query>

    <query id="selectAbnormalPersonSummary">
      SELECT
        id, name, department,
        count(if(work_type='10',1, null)) AS 'late',
        count(if(work_type='01',1, null)) AS 'leave_early',
        count(if(work_type='11',1, null)) AS 'late_leave_early',
        count(if(work_type='21',1, null)) AS 'absent',
        count(if(work_type='50',1, null)) AS 'data_none_1',
        count(if(work_type='51',1, null)) AS 'data_none_2'
      FROM
        commute_result_tbl
      WHERE
        date between ? AND ?
      group by
        id
    </query>

    <query id="selectDeptPersonCount">
      SELECT department, count(*) as count
      FROM (
        SELECT distinct department, id
        FROM commute_result_tbl
        WHERE date like ?
      ) R
      GROUP BY department
    </query>

    <query id="selectDeptPersonCountType2">
      SELECT department, count(*) as count
      FROM (
        SELECT distinct department, id
        FROM commute_result_tbl
        WHERE date between ? AND ?
      ) R
      GROUP BY department
    </query>

    <query id="selectDeptDetail">
      SELECT
        c.name as name, c.date as date, w.name as work_type
      FROM
        commute_result_tbl c, work_type_code_tbl w
      WHERE
        w.code = c.work_type AND
        date between ? AND ? AND department = ? AND work_type = ?
    </query>

    <query id="selectOverTimePersonal">
      SELECT id, department, name, 
        SUM(if(overtime_code = "2015_AA" OR overtime_code = "2015_AB" OR overtime_code = "2015_AC", over_time-except, 0)) as TOTAL_A,
        COUNT(if(overtime_code = "2015_AA", 1, null)) as AA,
        COUNT(if(overtime_code = "2015_AB", 1, null)) as AB,
        COUNT(if(overtime_code = "2015_AC", 1, null)) as AC,
        SUM(if(overtime_code = "2015_BA" OR overtime_code = "2015_BB" OR overtime_code = "2015_BC", over_time, 0)) as TOTAL_B,
        COUNT(if(overtime_code = "2015_BA", 1, null)) as BA,
        COUNT(if(overtime_code = "2015_BB", 1, null)) as BB,
        COUNT(if(overtime_code = "2015_BC", 1, null)) as BC
      FROM commute_result_tbl c
      WHERE
        date between ? AND ?
      GROUP BY id
    </query>

    <query id="selectOverTimeById">
      SELECT id, department, name, ? AS base_date,
        SUM(over_time - if(except is null, 0, except)) AS sum_over_time
      FROM commute_result_tbl c
      WHERE
        id = ? AND
        date between ? AND ? AND
        overtime_code in ( "2015_AA", "2015_AB", "2015_AC", "2015_BA", "2015_BB", "2015_BC" );
    </query>

    <query id="selectOverTimeDept">
      SELECT department,
        SUM(if(overtime_code = "2015_AA" OR overtime_code = "2015_AB" OR overtime_code = "2015_AC", over_time-except, 0)) as TOTAL_A,
        COUNT(if(overtime_code = "2015_AA", 1, null)) as AA,
        COUNT(if(overtime_code = "2015_AB", 1, null)) as AB,
        COUNT(if(overtime_code = "2015_AC", 1, null)) as AC,
        SUM(if(overtime_code = "2015_BA" OR overtime_code = "2015_BB" OR overtime_code = "2015_BC", over_time, 0)) as TOTAL_B,
        COUNT(if(overtime_code = "2015_BA", 1, null)) as BA,
        COUNT(if(overtime_code = "2015_BB", 1, null)) as BB,
        COUNT(if(overtime_code = "2015_BC", 1, null)) as BC
      FROM commute_result_tbl c
      WHERE
        date between ? AND ?
      GROUP BY department
    </query>

  </group>
  
  <group id="bookLibrary">
    <query id="selectBookLibrary">
      SELECT 
        book.book_id, 
        book.category_1, 
        book.category_2, 
        book.manage_no, 
        book.book_name, 
        book.author, 
        book.publisher, 
        DATE_FORMAT(book.publishing_date, '%Y-%m-%d') as publishing_date, 
        book.img_src, 
        book.isbn, 
        IF (
          rent.rent_id is NULL, '0', '1'
        ) as state,
        IF (
          rent.user_id is NULL, '', (select name from members_tbl where id=rent.user_id)
        ) as rent_user,
        IF( 
          rent.due_date is null, '', DATE_FORMAT(rent.due_date, '%Y-%m-%d' )
        ) as due_date
      FROM
        book_library_tbl book
      LEFT OUTER JOIN 
        book_rent_tbl rent ON rent.book_id=book.book_id
      ORDER BY field (book.category_1, 'OS', 'DL', 'DE', 'PL', 'DP', 'DM', 'TE', 'PR', 'CU'), book.manage_no;
    </query>
    <query id="selectBookLibraryOverDueDate">
      SELECT 
        book.book_id, 
        book.manage_no, 
        book.book_name, 
        book.author, 
        book.publisher, 
        book.img_src, 
        book.isbn, 
        rent.user_id as user_id,
        rent.rent_id as rent_id,
        (select name from members_tbl where id=rent.user_id) as rent_user_name,
        (select email from members_tbl where id=rent.user_id) as rent_user_email,
        DATE_FORMAT(rent.due_date, '%Y-%m-%d' ) as due_date
      FROM
        book_library_tbl book
      LEFT OUTER JOIN 
        book_rent_tbl rent ON rent.book_id=book.book_id
      WHERE
        rent.rent_id is not null AND rent.due_date &lt; now()
    </query>
    <query id="deleteBookLibrary">
      DELETE FROM
        book_library_tbl
      WHERE 
        book_id=?
    </query>
    <query id="insertBookLibrary">
      INSERT INTO
        book_library_tbl (category_1, category_2, manage_no, book_name, author, publisher, publishing_date, img_src, isbn) 
      VALUES
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
    </query>
    <query id="insertRentBook">
      INSERT INTO 
        book_rent_tbl (book_id, user_id, rent_date, due_date) 
      VALUES 
        (?, ?, CURDATE(), ?)
    </query>
    <query id="deleteRentBook">
      DELETE FROM 
        book_rent_tbl
      WHERE 
        book_id=? and user_id=?
    </query>
    <query id="insertRentHistory">
      INSERT INTO
        book_rent_history_tbl (user_id, book_name, author, publisher, img_src, manage_no, state, modify_date)
      VALUES
        (
          ?, 
          (select book_name from book_library_tbl where book_id=?),
          (select author from book_library_tbl where book_id=?),
          (select publisher from book_library_tbl where book_id=?),
          (select img_src from book_library_tbl where book_id=?),
          (select manage_no from book_library_tbl where book_id=?),
          ?, 
          CURDATE()
        )
    </query>
    <query id="selectRentHistory">
      SELECT 
        history.history_id,
        history.user_id,
        mem.name,
        history.book_name,
        history.author,
        history.publisher,
        history.img_src,
        history.manage_no,
        history.state,
        DATE_FORMAT(history.modify_date, '%Y-%m-%d') as modify_date
      FROM 
        book_rent_history_tbl history
      LEFT OUTER JOIN 
        members_tbl mem ON mem.id=history.user_id
      WHERE 
        DATE(history.modify_date) &gt;= DATE_FORMAT(?, '%Y-%m-%d')
      AND
        DATE(history.modify_date) &lt;= DATE_FORMAT(?, '%Y-%m-%d')
    </query>
    <query id="selectManageNo">
      SELECT 
        manage_no 
      FROM 
        book_library_tbl 
      WHERE 
        manage_no LIKE CONCAT('%',?,'%')
      ORDER BY
        manage_no ASC
    </query>
  </group>

  <group id="yesCalendar"> 
    <query id="selectYesCalendarType">
      SELECT *,
        (SELECT GROUP_CONCAT(share_member_id SEPARATOR ',') FROM calendar_type_share_tbl WHERE calendar_type_id = c1.calendar_type_id) AS share_member_list
      FROM calendar_type_tbl c1
      WHERE member_id = ? OR member_id = "*" 
      ORDER BY calendar_type_str;
    </query>

    <query id="insertYesCalendarType">
      INSERT INTO calendar_type_tbl (member_id, member_dept_code, calendar_type_str, color, fcolor, visible, share_dept)  VALUES(?, ?, ?, ?, ?, ?, ?)
    </query>

    <query id="updateYesCalendarType">
      UPDATE calendar_type_tbl SET calendar_type_str = ?, color = ?, fcolor =?, visible = ?, share_dept = ? WHERE calendar_type_id = ? AND member_id = ?
    </query>

    <query id="updateYesCalendarTypeForDeptCode1">
      UPDATE calendar_type_tbl SET member_dept_code = ? WHERE member_id = ?
    </query>

    <query id="updateYesCalendarTypeForDeptCode2">
      UPDATE calendar_type_tbl SET member_dept_code = ? WHERE member_dept_code = ?
    </query>

    <query id="deleteYesCalendarType">
      DELETE FROM calendar_type_tbl WHERE calendar_type_id = ? AND member_id = ?
    </query>


    <query id="selectYesCalendarTypeShare">
      SELECT share_member_id FROM calendar_type_share_tbl WHERE member_id = ?
    </query>

    <query id="insertYesCalendarTypeShare">
      INSERT INTO calendar_type_share_tbl (member_id, calendar_type_id, share_member_id) VALUES(?, ?, ?)
    </query>

    <query id="deleteYesCalendarTypeShare">
      DELETE FROM calendar_type_share_tbl WHERE member_id = ? AND calendar_type_id = ?
    </query>

    <query id="selectCalendarTypeIdForMe">
      (SELECT calendar_type_id FROM calendar_type_share_tbl WHERE share_member_id = ?)
      UNION
      (select calendar_type_id from calendar_type_tbl WHERE member_id = ? OR ( share_dept = 1 AND member_dept_code = ?))
    </query>


    <query id="selectYesCalendar1">
      SELECT cal.calendar_id, cal.member_id, cal.title, cal.all_day, date_format(cal.start, "%Y-%m-%d") AS start, date_format(cal.end, "%Y-%m-%d") as end, 
        cal.alarm, cal.calendar_type, cal.memo, cal.reg_time, datediff(cal.end, cal.start) as date_diff,
        cal_type.color, cal_type.fcolor, cal_type.calendar_type_str
      FROM commute.calendar_tbl cal LEFT JOIN calendar_type_tbl cal_type ON cal.calendar_type = cal_type.calendar_type_id
      WHERE ((cal.start BETWEEN ? AND ?) OR ( cal.end BETWEEN ? AND ? )) AND cal.member_id = ? OR cal.calendar_type IN (?)
      ORDER BY date_diff DESC
    </query>

    <query id="selectYesCalendar2">
      SELECT cal.calendar_id, cal.member_id, cal.title, cal.all_day, date_format(cal.start, "%Y-%m-%d") AS start, date_format(cal.end, "%Y-%m-%d") as end, 
        cal.alarm, cal.calendar_type, cal.memo, cal.reg_time, datediff(cal.end, cal.start) as date_diff,
        cal_type.color, cal_type.fcolor, cal_type.calendar_type_str
      FROM commute.calendar_tbl cal LEFT JOIN calendar_type_tbl cal_type ON cal.calendar_type = cal_type.calendar_type_id
      WHERE cal.member_id = ? AND ((cal.start BETWEEN ? AND ?) OR ( cal.end BETWEEN ? AND ? ))
      ORDER BY date_diff DESC
    </query>

    <query id="insertYesCalendar">
      INSERT INTO calendar_tbl(member_id, title, all_day, start, end, alarm, calendar_type, memo, reg_time)
      VALUES (?, ?, ?, ?, ?, ?, ?, ?, now())
    </query>

    <query id="updateYesCalendar">
      UPDATE calendar_tbl SET title = ?, all_day = ?, start = ?, end = ?, alarm = ?, calendar_type = ?, memo = ?
      WHERE calendar_id = ?
    </query>

    <query id="updateYesCalendarForType">
      UPDATE calendar_tbl SET calendar_type = ?
      WHERE calendar_type = ? AND member_id = ?
    </query>

    <query id="deleteYesCalendar">
      DELETE FROM calendar_tbl WHERE calendar_id = ? AND member_id = ?
    </query>
  </group>
</querys>
